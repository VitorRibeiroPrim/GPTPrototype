{
  "apiVersions": [
    {
      "isDefault": true,
      "version": "1.0"
    }
  ],
  "appSettings": {
    "standard": [
      {
        "name": "Logging:Debug:LogLevel:Default",
        "description": "The default log level for the Debug provider.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "dv": "Information",
          "pd": "Warning"
        },
        "isDeprecated": false
      },
      {
        "name": "Logging:Console:LogLevel:Default",
        "description": "The default log level for the Console provider.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "dv": "Information",
          "pd": "Warning"
        },
        "isDeprecated": false
      },
      {
        "name": "Logging:ApplicationInsights:LogLevel:Default",
        "description": "The default log level for the Application Insights provider.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "dv": "Information",
          "pd": "Information"
        },
        "isDeprecated": false
      },
      {
        "name": "HostConfiguration:ServiceCatalogServiceBaseUri",
        "description": "The Service Catalog base address.",
        "global": true,
        "secret": false,
        "alwaysOverride": true,
        "value": {
          "dv": "https://st-scs.lithium.primaverabss.com",
          "st": "https://st-scs.lithium.primaverabss.com",
          "pd": "https://scs.lithium.primaverabss.com"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Enabled",
        "description": "Indicates whether HTTP telemetry is enabled.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "Enabled"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:LogLevel",
        "description": "The log level used by the HTTP Telemetry middleware.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "Information"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Rules:*:Enabled",
        "description": "Indicates whether telemetry should be collected for this path.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "Enabled"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Rules:*:RequestBody",
        "description": "Indicates whether the request body should be included in the telemetry collected.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "dv": "Enabled",
          "pd": "Disabled"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Rules:*:ResponseBody",
        "description": "Indicates whether the response body should be included in the telemetry collected.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "dv": "Disabled",
          "pd": "Disabled"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Rules:/.monitoring/:Enabled",
        "description": "Indicates whether telemetry should be collected for this path.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "Enabled"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Rules:/.monitoring/:RequestBody",
        "description": "Indicates whether the request body should be included in the telemetry collected.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "Disabled"
        },
        "isDeprecated": false
      },
      {
        "name": "HttpTelemetryOptions:Rules:/.monitoring/:ResponseBody",
        "description": "Indicates whether the response body should be included in the telemetry collected.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "FailuresOnly"
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:Enabled",
        "description": "Indicates whether telemetry on Azure Application Insights is enabled.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": true
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:IgnoreErrors",
        "description": "Indicates whether errors while recording telemetry should be ignored.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": true
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:DeveloperMode",
        "description": "Indicates whether the developer mode is enabled. When enabled, telemetry records are dispatched faster.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "dv": true,
          "pd": false
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:EnableAdaptiveSampling",
        "description": "Indicates whether adaptive sampling is enabled.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": false
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:DefaultProperties:Lithium-Service",
        "description": "The default property that identifies the Lithium service.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "ChatGPT"
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:InstrumentationKey",
        "description": "The Azure Application Insights instrumentation key.",
        "global": false,
        "secret": false,
        "alwaysOverride": true,
        "value": {},
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:ExceptionTracking:DetectHttpRequestsAborted",
        "description": "Indicates whether exceptions resulting from HTTP request connections being aborted (client disconnecting) should be detected.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": true
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:RequestTracking:IgnoreAvailabilityTestsRequests",
        "description": "Indicates whether requests to availability endpoints should be ignored in telemetry.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": true
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:RequestTracking:IgnoreNotFoundPaths:0",
        "description": "The request paths that should be ignored (not collected) if they return HttpStatusCode.NotFound.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "/api/"
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:RequestTracking:IgnoreNotFoundPaths:1",
        "description": "The request paths that should be ignored (not collected) if they return HttpStatusCode.NotFound.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "/admin/functions"
        },
        "isDeprecated": false
      },
      {
        "name": "AzureInsightsTelemetryOptions:RequestTracking:IgnoreConflictPaths:0",
        "description": "The request paths that should be ignored (not collected) if they return HttpStatusCode.Conflict.",
        "global": false,
        "secret": false,
        "alwaysOverride": false,
        "value": {
          "pd": "/api/"
        },
        "isDeprecated": false
      }
    ],
    "custom": []
  },
  "backgroundServices": [],
  "description": {
    "displayName": "Chat Gpt Service",
    "id": "GPT",
    "name": "ChatGPT",
    "summary": "Chat GPT prototype."
  },
  "dependencies": [],
  "endpoints": [
    {
      "apiVersions": [
        {
          "isDefault": true,
          "version": "1.0"
        }
      ],
      "controller": "Monitoring",
      "name": "Probe",
      "route": "GET /.monitoring/probe",
      "summary": "Allows probing the health of the service."
    },
    {
      "apiVersions": [
        {
          "isDefault": true,
          "version": "1.0"
        }
      ],
      "controller": "Monitoring",
      "name": "Diagnostics",
      "route": "GET /.monitoring/diagnostics",
      "summary": "Allows diagnosing the health of the service."
    },
    {
      "apiVersions": [
        {
          "isDefault": true,
          "version": "1.0"
        }
      ],
      "controller": "Monitoring",
      "name": "Endpoints",
      "route": "GET /.monitoring/endpoints",
      "summary": "Allows verifying the endpoints of the service."
    },
    {
      "apiVersions": [
        {
          "isDefault": true,
          "version": "1.0"
        }
      ],
      "controller": "Monitoring",
      "name": "Configuration",
      "route": "GET /.monitoring/configuration",
      "summary": "Allows verifying the configuration of the service."
    },
    {
      "apiVersions": [
        {
          "isDefault": true,
          "version": "1.0"
        }
      ],
      "controller": "Monitoring",
      "name": "Information",
      "route": "GET /.monitoring/info",
      "summary": "Allows retrieving information about the service."
    },
    {
      "apiVersions": [
        {
          "isDefault": true,
          "version": "1.0"
        }
      ],
      "controller": "ChatGPT",
      "name": "Ask",
      "route": "POST /api/v{version:apiVersion}/chatgpt",
      "summary": "Ask a question to the chat."
    }
  ],
  "features": [
    {
      "isAvailable": false,
      "name": "Webhooks",
      "summary": "Provides webhooks in the REST API."
    },
    {
      "isAvailable": false,
      "name": "BackgroundServices",
      "summary": "Includes background services has hosted services."
    },
    {
      "isAvailable": false,
      "name": "OData",
      "summary": "Includes OData endpoints."
    },
    {
      "isAvailable": false,
      "name": "OidcAuthentication",
      "summary": "Uses OIDC authentication."
    }
  ],
  "serviceDependencies": [],
  "webhooks": []
}