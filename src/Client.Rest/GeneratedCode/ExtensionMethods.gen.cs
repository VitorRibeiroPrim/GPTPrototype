//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Primavera.Lithium.ChatGPT.Client.Rest;

/// <summary>
/// Provides extension methods for various types.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public static partial class ExtensionMethods
{
    // Ignore Spelling: admin
    // Ignore Spelling: app
    // Ignore Spelling: api
    // Ignore Spelling: css
    // Ignore Spelling: img
    // Ignore Spelling: restapi

    #region Public Methods

    /// <summary>
    /// Combines the provided <see cref="System.Text.Json.Serialization.JsonSerializerContext"/> instances as the
    /// contract resolver for the specified <see cref="System.Text.Json.JsonSerializerOptions"/>.
    /// </summary>
    /// <param name="options">The <see cref="System.Text.Json.JsonSerializerOptions"/> instance.</param>
    /// <param name="resolvers">The <see cref="System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver"/> instances.</param>
    public static void CombineResolvers(this System.Text.Json.JsonSerializerOptions? options, params System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver[] resolvers)
    {
        if (options == null)
        {
            return;
        }

        Primavera.Hydrogen.Guard.NotNullOrEmpty(resolvers, nameof(resolvers));

        System.Collections.Generic.List<System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver> list = new System.Collections.Generic.List<System.Text.Json.Serialization.Metadata.IJsonTypeInfoResolver>();

        if (options.TypeInfoResolver != null)
        {
            list.Add(options.TypeInfoResolver);
        }

        list.AddRange(resolvers);

        options.TypeInfoResolver = System.Text.Json.Serialization.Metadata.JsonTypeInfoResolver.Combine(
            list.ToArray());
    }

    #endregion
}
