//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Primavera.Lithium.ChatGPT.Client.Rest;

#region Code

#region Public Interfaces

/// <summary>
/// Provides monitoring operations on the service.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public partial interface IMonitoringClientController
{
    #region Code

    #region Methods

    /// <summary>
    /// Probes the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.HealthMonitoring.HealthResult"/> that describes the health of the service.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult>> ProbeAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Diagnoses the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.HealthMonitoring.HealthResult"/> that describes the health of the service.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult>> DiagnosticsAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Analyzes the service endpoints.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="System.Collections.Generic.IEnumerable{T}"/> of <see cref="Primavera.Hydrogen.Rest.Routing.EndpointInfo"/> that contains the list of endpoints.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<System.Collections.Generic.IEnumerable<Primavera.Hydrogen.Rest.Routing.EndpointInfo>>> EndpointsAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Analyzes the service configuration.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation"/> that describes where the configuration was saved.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation>> ConfigurationAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Returns information about the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.Rest.Description.ServiceInfo"/> that provides information about the service.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Description.ServiceInfo>> InformationAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Probes the service.
    /// </summary>
    /// <returns>
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.HealthMonitoring.HealthResult"/> that describes the health of the service.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult> Probe();

    /// <summary>
    /// Diagnoses the service.
    /// </summary>
    /// <returns>
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.HealthMonitoring.HealthResult"/> that describes the health of the service.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult> Diagnostics();

    /// <summary>
    /// Analyzes the service endpoints.
    /// </summary>
    /// <returns>
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="System.Collections.Generic.IEnumerable{T}"/> of <see cref="Primavera.Hydrogen.Rest.Routing.EndpointInfo"/> that contains the list of endpoints.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    Primavera.Hydrogen.Rest.Client.RestServiceResult<System.Collections.Generic.IEnumerable<Primavera.Hydrogen.Rest.Routing.EndpointInfo>> Endpoints();

    /// <summary>
    /// Analyzes the service configuration.
    /// </summary>
    /// <returns>
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation"/> that describes where the configuration was saved.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation> Configuration();

    /// <summary>
    /// Provides information about the service.
    /// </summary>
    /// <returns>
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// The <see cref="Primavera.Hydrogen.Rest.Description.ServiceInfo"/> that provides information about the service.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Description.ServiceInfo> Information();

    #endregion

    #endregion
}

/// <summary>
/// The chatGPT controller.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public partial interface IChatGPTClientController
{
    #region Code

    #region Methods

    /// <summary>
    /// Ask a question to the chat.
    /// </summary>
    /// <param name="request">The request with the question.</param>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<string>> AskAsync(Primavera.Lithium.ChatGPT.Client.Rest.Models.Request request, System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Ask a question to the chat.
    /// </summary>
    /// <param name="request">The request with the question.</param>
    /// <returns>
    /// The <see cref="Primavera.Hydrogen.Rest.Client.RestServiceResult{T}"/> result.
    /// </returns>
    /// <exception cref="Primavera.Hydrogen.Rest.Client.RestRequestException">Raised when the operation returns an unexpected status code.</exception>
    Primavera.Hydrogen.Rest.Client.RestServiceResult<string> Ask(Primavera.Lithium.ChatGPT.Client.Rest.Models.Request request);

    #endregion

    #endregion
}

#endregion

#endregion
