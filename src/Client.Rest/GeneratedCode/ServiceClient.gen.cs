//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Primavera.Lithium.ChatGPT.Client.Rest;

#region Code

#region Public Classes

/// <summary>
/// Defines the base class for the service client that allows accessing the Chat Gpt Service API.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
public abstract partial class ChatGPTClientBase : Primavera.Hydrogen.Rest.Client.RestServiceClient, IChatGPTClient
{
    #region Code

    #region Private Classes

    /// <summary>
    /// Defines a custom response classifier.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
    private partial class ResponseClassifier : Primavera.Hydrogen.Rest.Client.RestResponseClassifier
    {
        #region Code

        #region Public Methods

        /// <inheritdoc />
        public override bool IsRetriable(Primavera.Hydrogen.Rest.Client.Pipeline.RestHttpPipelineContext context)
        {
            bool retry = base.IsRetriable(context);

            // NOTES:
            // Do not retry the probe and diagnostics endpoints when failing with 503

            if (retry && context.Response.StatusCode == 503)
            {
                string? requestUri = context.Request.Uri?.AbsoluteUri;

                if (requestUri.ContainsNoCase(Metadata.Routes.Monitoring.Probe) || requestUri.ContainsNoCase(Metadata.Routes.Monitoring.Diagnostics))
                {
                    return false;
                }
            }

            return retry;
        }

        #endregion

        #endregion
    }

    #endregion

    #region Private Fields

    private IMonitoringClientController? monitoring;
    private IChatGPTClientController? chatGpt;

    #endregion

    #region Public Properties

    /// <inheritdoc />
    public virtual IMonitoringClientController Monitoring
    {
        get
        {
            if (this.monitoring == null)
            {
                this.monitoring = new MonitoringClientController(this);
            }

            return this.monitoring;
        }
    }

    /// <inheritdoc />
    public virtual IChatGPTClientController ChatGPT
    {
        get
        {
            if (this.chatGpt == null)
            {
                this.chatGpt = new ChatGPTClientController(this);
            }

            return this.chatGpt;
        }
    }

    #endregion

    #region Internal Properties

    /// <summary>
    /// Gets the default API version.
    /// </summary>
    internal string DefaultApiVersion => "1.0";

    /// <summary>
    /// Gets the pipeline invoker.
    /// </summary>
    internal Primavera.Hydrogen.Rest.Client.Pipeline.RestHttpPipeline.PipelineInvoker PipelineInvoker => this.Pipeline.Invoker;

    #endregion

    #region Protected Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTClientBase" /> class.
    /// </summary>
    /// <param name="serviceUri">The service URI.</param>
    /// <param name="credential">The credential that should be used to access the service.</param>
    protected ChatGPTClientBase(System.Uri serviceUri, Primavera.Hydrogen.Rest.Client.BearerTokenCredential credential)
        : base(serviceUri, credential, new ChatGPTClientOptions())
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTClientBase" /> class.
    /// </summary>
    /// <param name="serviceUri">The service URI.</param>
    /// <param name="credential">The credential that should be used to access the service.</param>
    /// <param name="clientOptions">The client options.</param>
    protected ChatGPTClientBase(System.Uri serviceUri, Primavera.Hydrogen.Rest.Client.BearerTokenCredential credential, ChatGPTClientOptions clientOptions)
        : base(serviceUri, credential, clientOptions)
    {
        this.Initialize(clientOptions);
    }

    #endregion

    #region Protected Methods

    /// <summary>
    /// Invoked when the service client is being created.
    /// </summary>
    /// <param name="clientOptions">The client options.</param>
    /// <remarks>
    /// This method can be overridden to add custom behavior when the service client is being created.
    /// </remarks>
    protected virtual void Initialize(ChatGPTClientOptions clientOptions)
    {
    }

    /// <inheritdoc />
    protected override Primavera.Hydrogen.Rest.Client.RestResponseClassifier GetResponseClassifier()
    {
        return new ResponseClassifier();
    }

    #endregion

    #endregion
}

/// <summary>
/// Defines the service client that allows accessing the Chat Gpt Service API.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
public partial class ChatGPTClient : ChatGPTClientBase
{
    #region Code

    #region Public Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTClient" /> class.
    /// </summary>
    /// <param name="serviceUri">The service URI.</param>
    /// <param name="credential">The credential that should be used to access the service.</param>
    public ChatGPTClient(System.Uri serviceUri, Primavera.Hydrogen.Rest.Client.BearerTokenCredential credential)
        : base(serviceUri, credential, new ChatGPTClientOptions())
    {
    }

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTClient" /> class.
    /// </summary>
    /// <param name="serviceUri">The service URI.</param>
    /// <param name="credential">The credential that should be used to access the service.</param>
    /// <param name="clientOptions">The client options.</param>
    public ChatGPTClient(System.Uri serviceUri, Primavera.Hydrogen.Rest.Client.BearerTokenCredential credential, ChatGPTClientOptions clientOptions)
        : base(serviceUri, credential, clientOptions)
    {
    }

    #endregion

    #endregion
}

#endregion

#endregion
