<#+

// *** WriteConstructor

public void WriteConstructor(ModelWriter modelWriter, ConstructorBodyModel model)
{

#>
        this.InitializeSerialization();
        this.SetDefaultValues();
<#+
}

// *** WriteInitializeSerialization

public void WriteInitializeSerialization(ModelWriter modelWriter, MethodBodyModel model)
{
    ServiceModel serviceModel = model.RootModelAs<CSharpFileModel>().SourceModel as ServiceModel;

    if (!serviceModel.Models.Any(m => m.Extensions().IsVisibleClientSide))
    {
        return;
    }

#>
        // NOTES:
        // This combines the known serializer contexts so that the REST pipeline
        // knows the types for generated controllers (monitoring, etc.)
        // DefaultJsonTypeInfoResolver enables reflection serialization,
        // which is needed because there is a scenario (status code 415)
        // where MVC will return ProblemDetails and that type cannot be
        // added to serializer contexts

<#+

    if (serviceModel.Webhooks.Any())
    {

#>
        this.SerializerOptions.CombineResolvers(
            new System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver(),
            Primavera.Hydrogen.Rest.RestSerializerContext.Default,
            Primavera.Hydrogen.Rest.Webhooks.WebhooksSerializerContext.Default,
            Primavera.Hydrogen.HealthMonitoring.HealthMonitoringSerializerContext.Default,
            Models.SerializerContext.Default);

        this.DeserializerOptions.CombineResolvers(
            new System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver(),
            Primavera.Hydrogen.Rest.RestSerializerContext.Default,
            Primavera.Hydrogen.Rest.Webhooks.WebhooksSerializerContext.Default,
            Primavera.Hydrogen.HealthMonitoring.HealthMonitoringSerializerContext.Default,
            Models.SerializerContext.Default);
<#+

    }
    else
    {

#>
        this.SerializerOptions.CombineResolvers(
            new System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver(),
            Primavera.Hydrogen.Rest.RestSerializerContext.Default,
            Primavera.Hydrogen.HealthMonitoring.HealthMonitoringSerializerContext.Default,
            Models.SerializerContext.Default);

        this.DeserializerOptions.CombineResolvers(
            new System.Text.Json.Serialization.Metadata.DefaultJsonTypeInfoResolver(),
            Primavera.Hydrogen.Rest.RestSerializerContext.Default,
            Primavera.Hydrogen.HealthMonitoring.HealthMonitoringSerializerContext.Default,
            Models.SerializerContext.Default);
<#+

    }
}

#>