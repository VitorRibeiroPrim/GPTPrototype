<#+

public void WriteNullableAttributes(ModelWriter modelWriter, ServiceModel model)
{

#>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// NOTES:
// This file is a hack to enable null reference attributes in .NET Standard libraries
// More info:
// https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/attributes/nullable-analysis
// https://www.meziantou.net/how-to-use-nullable-reference-types-in-dotnet-standard-2-0-and-dotnet-.htm
// https://www.thinktecture.com/en/net-core/c-8-nullable-reference-types-in-net-standard-21-and-net-4x/
// Original was copied from:
// https://github.com/dotnet/runtime/blob/main/src/libraries/System.Private.CoreLib/src/System/Diagnostics/CodeAnalysis/NullableAttributes.cs

namespace System.Diagnostics.CodeAnalysis;

/// <summary>
/// A non-nullable parameter, field, or property may be null.
/// </summary>
[System.AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class AllowNullAttribute : Attribute
{
}

/// <summary>
/// A nullable parameter, field, or property should never be null.
/// </summary>
[System.AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class DisallowNullAttribute : Attribute
{
}

/// <summary>
/// A non-nullable parameter, field, property, or return value may be null.
/// </summary>
[System.AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property | AttributeTargets.ReturnValue, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class MaybeNullAttribute : Attribute
{
}

/// <summary>
/// A nullable parameter, field, property, or return value will never be null.
/// </summary>
[System.AttributeUsage(AttributeTargets.Field | AttributeTargets.Parameter | AttributeTargets.Property | AttributeTargets.ReturnValue, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class NotNullAttribute : Attribute
{
}

/// <summary>
/// A non-nullable argument may be null when the method returns the specified boolean value.
/// </summary>
[System.AttributeUsage(AttributeTargets.Parameter, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class MaybeNullWhenAttribute : Attribute
{
    public MaybeNullWhenAttribute(bool returnValue) => this.ReturnValue = returnValue;

    public bool ReturnValue { get; }
}

/// <summary>
/// A nullable argument won't be null when the method returns the specified boolean value.
/// </summary>
[System.AttributeUsage(AttributeTargets.Parameter, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class NotNullWhenAttribute : Attribute
{
    public NotNullWhenAttribute(bool returnValue) => ReturnValue = returnValue;

    public bool ReturnValue { get; }
}

/// <summary>
/// A return value, property, or argument isn't null if the argument for the specified parameter isn't null.
/// </summary>
[System.AttributeUsage(AttributeTargets.Parameter | AttributeTargets.Property | AttributeTargets.ReturnValue, AllowMultiple = true, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class NotNullIfNotNullAttribute : Attribute
{
    public NotNullIfNotNullAttribute(string parameterName) => ParameterName = parameterName;

    public string ParameterName { get; }
}

/// <summary>
/// A method or property never returns. In other words, it always throws an exception.
/// </summary>
[System.AttributeUsage(AttributeTargets.Method, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class DoesNotReturnAttribute : Attribute
{
}

/// <summary>
/// This method or property never returns if the associated boolean parameter has the specified value.
/// </summary>
[System.AttributeUsage(AttributeTargets.Parameter, Inherited = false)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class DoesNotReturnIfAttribute : Attribute
{
    public DoesNotReturnIfAttribute(bool parameterValue) => ParameterValue = parameterValue;

    public bool ParameterValue { get; }
}

/// <summary>
/// The listed member won't be null when the method returns.
/// </summary>
[System.AttributeUsage(AttributeTargets.Method | AttributeTargets.Property, Inherited = false, AllowMultiple = true)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class MemberNotNullAttribute : Attribute
{
    public MemberNotNullAttribute(string member) => Members = new[] { member };

    public MemberNotNullAttribute(params string[] members) => Members = members;

    public string[] Members { get; }
}

/// <summary>
/// The listed member won't be null when the method returns the specified boolean value.
/// </summary>
[System.AttributeUsage(AttributeTargets.Method | AttributeTargets.Property, Inherited = false, AllowMultiple = true)]
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal sealed class MemberNotNullWhenAttribute : Attribute
{
    public MemberNotNullWhenAttribute(bool returnValue, string member)
    {
        ReturnValue = returnValue;
        Members = new[] { member };
    }

    public MemberNotNullWhenAttribute(bool returnValue, params string[] members)
    {
        ReturnValue = returnValue;
        Members = members;
    }

    public bool ReturnValue { get; }

    public string[] Members { get; }
}
<#+

}

#>