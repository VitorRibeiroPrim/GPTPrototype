//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Primavera.Lithium.ChatGPT.Client.Rest;

#region Code

#region Internal Classes

/// <summary>
/// Defines the base class for the type that provides monitoring operations on the service.
/// </summary>
/// <seealso cref="IMonitoringClientController" />
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal abstract partial class MonitoringClientControllerBase : IMonitoringClientController
{
    #region Code

    #region Protected Fields

    /// <summary>
    /// The service client instance.
    /// </summary>
    protected ChatGPTClientBase client;

    #endregion

    #region Protected Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="MonitoringClientControllerBase" /> class.
    /// </summary>
    /// <param name="client">The service client.</param>
    protected MonitoringClientControllerBase(ChatGPTClientBase client)
    {
        Primavera.Hydrogen.Guard.NotNull(client, nameof(client));

        this.client = client;

        this.Initialize();
    }

    #endregion

    #region Public Methods

    /// <inheritdoc />
    public virtual System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult>> ProbeAsync(System.Threading.CancellationToken cancellationToken = default)
    {
        // Build the URL of the request
            
        System.Uri requestUri = Primavera.Hydrogen.Rest.Routing.RouteTemplateResolver.Resolve(
            this.client.ServiceUri,
            Metadata.Routes.Monitoring.Probe);

        // Result
            
        return this.client.PipelineInvoker.InvokeGetAsync<Primavera.Hydrogen.HealthMonitoring.HealthResult>(
            requestUri, 
            System.Net.HttpStatusCode.OK, 
            cancellationToken);
    }

    /// <inheritdoc />
    public virtual System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult>> DiagnosticsAsync(System.Threading.CancellationToken cancellationToken = default)
    {
        // Build the URL of the request
            
        System.Uri requestUri = Primavera.Hydrogen.Rest.Routing.RouteTemplateResolver.Resolve(
            this.client.ServiceUri,
            Metadata.Routes.Monitoring.Diagnostics);

        // Result
            
        return this.client.PipelineInvoker.InvokeGetAsync<Primavera.Hydrogen.HealthMonitoring.HealthResult>(
            requestUri, 
            System.Net.HttpStatusCode.OK, 
            cancellationToken);
    }

    /// <inheritdoc />
    public virtual System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<System.Collections.Generic.IEnumerable<Primavera.Hydrogen.Rest.Routing.EndpointInfo>>> EndpointsAsync(System.Threading.CancellationToken cancellationToken = default)
    {
        // Build the URL of the request
            
        System.Uri requestUri = Primavera.Hydrogen.Rest.Routing.RouteTemplateResolver.Resolve(
            this.client.ServiceUri,
            Metadata.Routes.Monitoring.Endpoints);
            
        // Result
            
        return this.client.PipelineInvoker.InvokeGetAsync<System.Collections.Generic.IEnumerable<Primavera.Hydrogen.Rest.Routing.EndpointInfo>>(
            requestUri, 
            System.Net.HttpStatusCode.OK, 
            cancellationToken);
    }

    /// <inheritdoc />
    public virtual System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation>> ConfigurationAsync(System.Threading.CancellationToken cancellationToken = default)
    {
        // Build the URL of the request
            
        System.Uri requestUri = Primavera.Hydrogen.Rest.Routing.RouteTemplateResolver.Resolve(
            this.client.ServiceUri,
            Metadata.Routes.Monitoring.Configuration);

        // Result
            
        return this.client.PipelineInvoker.InvokeGetAsync<Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation>(
            requestUri, 
            System.Net.HttpStatusCode.OK, 
            cancellationToken);
    }

    /// <inheritdoc />
    public virtual System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Description.ServiceInfo>> InformationAsync(System.Threading.CancellationToken cancellationToken = default)
    {
        // Build the URL of the request
            
        System.Uri requestUri = Primavera.Hydrogen.Rest.Routing.RouteTemplateResolver.Resolve(
            this.client.ServiceUri,
            Metadata.Routes.Monitoring.Information);

        // Result
            
        return this.client.PipelineInvoker.InvokeGetAsync<Primavera.Hydrogen.Rest.Description.ServiceInfo>(
            requestUri, 
            System.Net.HttpStatusCode.OK, 
            cancellationToken);
    }

    /// <inheritdoc />
    public virtual Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult> Probe()
    {
        // Result
            
        return this.ProbeAsync()
            .ConfigureAwait(false)
            .GetAwaiter()
            .GetResult();
    }

    /// <inheritdoc />
    public virtual Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.HealthMonitoring.HealthResult> Diagnostics()
    {
        // Result
            
        return this.DiagnosticsAsync()
            .ConfigureAwait(false)
            .GetAwaiter()
            .GetResult();
    }

    /// <inheritdoc />
    public virtual Primavera.Hydrogen.Rest.Client.RestServiceResult<System.Collections.Generic.IEnumerable<Primavera.Hydrogen.Rest.Routing.EndpointInfo>> Endpoints()
    {
        // Result
            
        return this.EndpointsAsync()
            .ConfigureAwait(false)
            .GetAwaiter()
            .GetResult();
    }

    /// <inheritdoc />
    public virtual Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Configuration.ConfigurationLocation> Configuration()
    {
        // Result
            
        return this.ConfigurationAsync()
            .ConfigureAwait(false)
            .GetAwaiter()
            .GetResult();
    }

    /// <inheritdoc />
    public virtual Primavera.Hydrogen.Rest.Client.RestServiceResult<Primavera.Hydrogen.Rest.Description.ServiceInfo> Information()
    {
        // Result
            
        return this.InformationAsync()
            .ConfigureAwait(false)
            .GetAwaiter()
            .GetResult();
    }

    #endregion

    #region Protected Methods

    /// <summary>
    /// Performs additional initialization.
    /// </summary>
    protected virtual void Initialize()
    {
    }

    #endregion

    #endregion
}

/// <summary>
/// Provides monitoring operations on the service.
/// </summary>
/// <seealso cref="MonitoringClientControllerBase" />
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal partial class MonitoringClientController : MonitoringClientControllerBase
{
    #region Code

    #region Public Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="MonitoringClientController" /> class.
    /// </summary>
    /// <param name="client">The service client.</param>
    public MonitoringClientController(ChatGPTClientBase client)
        : base(client)
    {
    }

    #endregion

    #endregion
}

/// <summary>
/// The chatGPT controller.
/// </summary>
/// <seealso cref="IChatGPTClientController" />
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal abstract partial class ChatGPTClientControllerBase : IChatGPTClientController
{
    #region Code

    #region Protected Fields

    /// <summary>
    /// The service client instance.
    /// </summary>
    protected ChatGPTClientBase client;

    #endregion

    #region Protected Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTClientControllerBase" /> class.
    /// </summary>
    /// <param name="client">The service client.</param>
    protected ChatGPTClientControllerBase(ChatGPTClientBase client)
    {
        Primavera.Hydrogen.Guard.NotNull(client, nameof(client));

        this.client = client;

        this.Initialize();
    }

    #endregion

    #region Public Methods

    /// <inheritdoc />
    public virtual System.Threading.Tasks.Task<Primavera.Hydrogen.Rest.Client.RestServiceResult<string>> AskAsync(Primavera.Lithium.ChatGPT.Client.Rest.Models.Request request, System.Threading.CancellationToken cancellationToken = default)
    {
        // Begin Validation

        Primavera.Hydrogen.Guard.NotNull(request, nameof(request));
        Primavera.Hydrogen.Guard.IsValid(request, nameof(request), 10, true);

        this.ValidateAsk(request);

        // End Validation

        // Route

        System.Collections.Generic.Dictionary<string, object?> routeParameters = new System.Collections.Generic.Dictionary<string, object?>(System.StringComparer.OrdinalIgnoreCase)
        {
            ["version"] = this.client.DefaultApiVersion
        };

        System.Uri requestUri = Primavera.Hydrogen.Rest.Routing.RouteTemplateResolver.Resolve(
            this.client.ServiceUri,
            Metadata.Routes.ChatGPT.Ask,
            routeParameters);

        this.ConfigureAskRoute(routeParameters);

        // Headers

        System.Collections.Generic.Dictionary<string, string?> headers = new System.Collections.Generic.Dictionary<string, string?>(System.StringComparer.OrdinalIgnoreCase)
        {
        };

        this.ConfigureAskHeaders(headers);

        // Result

        // Post (result, model parameter)

        return this.client.PipelineInvoker.InvokePostWithHeadersAsync<Primavera.Lithium.ChatGPT.Client.Rest.Models.Request, string>(
            requestUri, 
            headers,
            request, 
            System.Net.HttpStatusCode.OK, 
            cancellationToken);
    }

    /// <inheritdoc />
    public virtual Primavera.Hydrogen.Rest.Client.RestServiceResult<string> Ask(Primavera.Lithium.ChatGPT.Client.Rest.Models.Request request)
    {
        // Result

        return this.AskAsync(request)
            .ConfigureAwait(false)
            .GetAwaiter()
            .GetResult();
    }

    #endregion

    #region Protected Methods

    /// <summary>
    /// Performs additional initialization.
    /// </summary>
    protected virtual void Initialize()
    {
    }

    /// <summary>
    /// Configures the dictionary used to set the action parameters in the route.
    /// </summary>
    /// <param name="routeParameters">The dictionary used to set the action parameters in the route.</param>
    protected virtual void ConfigureAskRoute(System.Collections.Generic.IDictionary<string, object?> routeParameters)
    {
    }

    /// <summary>
    /// Configures the dictionary used to set the action parameters in the headers.
    /// </summary>
    /// <param name="headers">The dictionary used to set the action parameters in the headers.</param>
    protected virtual void ConfigureAskHeaders(System.Collections.Generic.IDictionary<string, string?> headers)
    {
    }

    /// <summary>
    /// Validates the action parameters.
    /// </summary>
    /// <param name="request">The request with the question.</param>
    /// <remarks>
    /// Override this method to implement custom validations.
    /// </remarks>
    protected virtual void ValidateAsk(Primavera.Lithium.ChatGPT.Client.Rest.Models.Request request)
    {
    }

    #endregion

    #endregion
}

/// <summary>
/// The chatGPT controller.
/// </summary>
/// <seealso cref="ChatGPTClientControllerBase" />
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
internal partial class ChatGPTClientController : ChatGPTClientControllerBase
{
    #region Code

    #region Public Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTClientController" /> class.
    /// </summary>
    /// <param name="client">The service client.</param>
    public ChatGPTClientController(ChatGPTClientBase client)
        : base(client)
    {
    }

    #endregion

    #endregion
}

#endregion

#endregion
