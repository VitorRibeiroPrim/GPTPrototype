//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Primavera.Lithium.ChatGPT.Server.RestApi.Controllers;

#region Code

#region Public Classes

/// <summary>
/// Defines a base class that allows sharing behavior between all API controllers.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public abstract partial class CustomApiControllerBase : Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase
{
    #region Code

    #region Protected Properties

    /// <summary>
    /// Gets the mapper.
    /// </summary>
    protected AutoMapper.IMapper Mapper => this.HttpContext.RequestServices.GetRequiredService<AutoMapper.IMapper>();

    #endregion

    #region Public Methods

    /// <summary>
    /// Creates an <see cref="Microsoft.AspNetCore.Mvc.NotFoundObjectResult"/> that produces a
    /// <see cref="Microsoft.AspNetCore.Http.StatusCodes.Status404NotFound"/> response
    /// for the specified <see cref="Primavera.Hydrogen.Rest.RestProblemDetails"/> instance.
    /// </summary>
    /// <param name="value">The <see cref="Primavera.Hydrogen.Rest.RestProblemDetails"/> instance.</param>
    /// <returns>
    /// The <see cref="Microsoft.AspNetCore.Mvc.NotFoundObjectResult"/> instance.
    /// </returns>
    [Microsoft.AspNetCore.Mvc.NonAction]
    public virtual Microsoft.AspNetCore.Mvc.NotFoundObjectResult NotFound(Primavera.Hydrogen.Rest.RestProblemDetails value)
    {
        Primavera.Hydrogen.Guard.NotNull(value, nameof(value));

        value.Status = 404;
        value.Type = this.Request.GetRestProblemDetailsType(value.Code);

        return new Microsoft.AspNetCore.Mvc.NotFoundObjectResult(value)
        {
            ContentTypes =
            {
                Primavera.Hydrogen.Net.Http.HttpHeader.Common.JsonProblemContentType.Value!
            }
        };
    }

    /// <summary>
    /// Creates an <see cref="Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> that produces a
    /// <see cref="Microsoft.AspNetCore.Http.StatusCodes.Status400BadRequest"/> response
    /// for the specified <see cref="Primavera.Hydrogen.Rest.RestProblemDetails"/> instance.
    /// </summary>
    /// <param name="value">The <see cref="Primavera.Hydrogen.Rest.RestProblemDetails"/> instance.</param>
    /// <returns>
    /// The <see cref="Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> instance.
    /// </returns>
    [Microsoft.AspNetCore.Mvc.NonAction]
    public virtual Microsoft.AspNetCore.Mvc.BadRequestObjectResult BadRequest(Primavera.Hydrogen.Rest.RestProblemDetails value)
    {
        Primavera.Hydrogen.Guard.NotNull(value, nameof(value));

        value.Status = 400;
        value.Type = this.Request.GetRestProblemDetailsType(value.Code);

        return new Microsoft.AspNetCore.Mvc.BadRequestObjectResult(value)
        {
            ContentTypes =
            {
                Primavera.Hydrogen.Net.Http.HttpHeader.Common.JsonProblemContentType.Value!
            }
        };
    }

    /// <summary>
    /// Creates an <see cref="Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> that produces a
    /// <see cref="Microsoft.AspNetCore.Http.StatusCodes.Status409Conflict"/> response
    /// for the specified <see cref="Primavera.Hydrogen.Rest.RestProblemDetails"/> instance.
    /// </summary>
    /// <param name="value">The <see cref="Primavera.Hydrogen.Rest.RestProblemDetails"/> instance.</param>
    /// <returns>
    /// The <see cref="Microsoft.AspNetCore.Mvc.ConflictObjectResult"/> instance.
    /// </returns>
    [Microsoft.AspNetCore.Mvc.NonAction]
    public virtual Microsoft.AspNetCore.Mvc.ConflictObjectResult Conflict(Primavera.Hydrogen.Rest.RestProblemDetails value)
    {
        Primavera.Hydrogen.Guard.NotNull(value, nameof(value));

        value.Status = 409;
        value.Type = this.Request.GetRestProblemDetailsType(value.Code);

        return new Microsoft.AspNetCore.Mvc.ConflictObjectResult(value)
        {
            ContentTypes =
            {
                Primavera.Hydrogen.Net.Http.HttpHeader.Common.JsonProblemContentType.Value!
            }
        };
    }

    #endregion

    #endregion
}

/// <summary>
/// The chatGPT controller.
/// </summary>
/// <remarks>
/// This is the base class of the MVC controller.
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[Microsoft.AspNetCore.Mvc.ApiVersion("1.0")]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
public abstract partial class ChatGPTControllerBase : CustomApiControllerBase, IChatGPTController
{
    #region Code

    #region Protected Properties

    /// <summary>
    /// Gets the logger.
    /// </summary>
    protected Microsoft.Extensions.Logging.ILogger Logger => this.HttpContext.RequestServices.GetRequiredService<Microsoft.Extensions.Logging.ILogger<ChatGPTControllerBase>>();

    #endregion

    #region Protected Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTControllerBase" /> class.
    /// </summary>
    protected ChatGPTControllerBase()
        : base()
    {
    }

    #endregion

    #region Public Methods

    /// <inheritdoc />
    [Microsoft.AspNetCore.Mvc.ApiVersion("1.0")]
    [Microsoft.AspNetCore.Mvc.HttpPost(Metadata.Routes.ChatGPT.Ask)]
    [Microsoft.AspNetCore.Mvc.ProducesResponseType(typeof(Primavera.Hydrogen.Rest.RestProblemDetails), (int)System.Net.HttpStatusCode.BadRequest)]
    [Microsoft.AspNetCore.Mvc.ProducesResponseType(typeof(Primavera.Hydrogen.Rest.RestProblemDetails), (int)System.Net.HttpStatusCode.Conflict)]
    [Microsoft.AspNetCore.Mvc.ProducesResponseType(typeof(string), (int)System.Net.HttpStatusCode.OK)]
    public virtual System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> AskAsync([Microsoft.AspNetCore.Mvc.FromBody] Primavera.Lithium.ChatGPT.Server.RestApi.Models.Request request, System.Threading.CancellationToken cancellationToken = default)
    {
        // Begin Validation

        if (!this.Validate()
            .Required(
                nameof(request),
                request, 
                Localization.ValidationResources.RES_Error_ChatGPT_Ask_Request_Required)
            .Result(
                Common.ErrorCodes.RequestArgsInvalid, 
                Localization.ValidationResources.RES_Error_RequestArgsInvalid, 
                out Primavera.Hydrogen.Rest.RestProblemDetails? validationError))
        {
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(
                this.BadRequest(
                    validationError));
        }

        if (!this.ValidateAsk(request, out Primavera.Hydrogen.Rest.RestProblemDetails? customValidationError))
        {
            return System.Threading.Tasks.Task.FromResult<Microsoft.AspNetCore.Mvc.IActionResult>(
                this.BadRequest(
                    customValidationError));
        }

        // End Validation

        // Result

        return this.AskCoreAsync(request, cancellationToken);
    }

    #endregion

    #region Protected Methods

    /// <summary>
    /// Ask a question to the chat.
    /// </summary>
    /// <param name="request">The request with the question.</param>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The action result.
    /// </returns>
    protected abstract System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> AskCoreAsync(Primavera.Lithium.ChatGPT.Server.RestApi.Models.Request request, System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Validates the action parameters.
    /// </summary>
    /// <param name="request">The request with the question.</param>
    /// <param name="error">The validation error.</param>
    /// <returns>
    /// A value indicating whether the validation succeeded.
    /// </returns>
    /// <remarks>
    /// Override this method to implement custom validation.
    /// </remarks>
    protected virtual bool ValidateAsk(Primavera.Lithium.ChatGPT.Server.RestApi.Models.Request request, [System.Diagnostics.CodeAnalysis.NotNullWhen(false)] out Primavera.Hydrogen.Rest.RestProblemDetails? error)
    {
        error = null;
        return true;
    }

    #endregion

    #endregion
}

/// <summary>
/// The chatGPT controller.
/// </summary>
/// <remarks>
/// This is the MVC controller.
/// </remarks>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
[Microsoft.AspNetCore.Mvc.ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
[System.Diagnostics.CodeAnalysis.SuppressMessage("Maintainability Rules", "SA1402:FileMayOnlyContainASingleType", Justification = "Because of code generation design.")]
public partial class ChatGPTController : ChatGPTControllerBase
{
    #region Code

    #region Public Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="ChatGPTController" /> class.
    /// </summary>
    public ChatGPTController()
        : base()
    {
    }

    #endregion

    #endregion
}

#endregion

#endregion
