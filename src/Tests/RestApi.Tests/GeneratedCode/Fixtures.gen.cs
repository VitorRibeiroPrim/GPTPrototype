//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Primavera.Hydrogen.Configuration;

namespace Primavera.Lithium.ChatGPT.Server.RestApi.Tests;

#region Code

#region Public Classes

/// <summary>
/// Defines the base class for a test fixture used for REST API tests.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public abstract partial class RestApiTestFixtureBase
{
    #region Code

    #region Private Fields

    private System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection> configureServices;
    private bool initialized;
    private System.IServiceProvider serviceProvider;

    #endregion

    #region Public Properties

    /// <summary>
    /// Gets the application services.
    /// </summary>
    public System.IServiceProvider ApplicationServices
    {
        get
        {
            this.Initialize();
            return this.serviceProvider;
        }
    }

    #endregion

    #region Protected Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="RestApiTestFixtureBase"/> class.
    /// </summary>
    /// <param name="configureServices">Allows configuring services.</param>
    protected RestApiTestFixtureBase(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection> configureServices = null)
    {
        this.configureServices = configureServices;
    }

    #endregion

    #region Protected Methods

    /// <summary>
    /// Initializes the fixture.
    /// </summary>
    protected virtual void Initialize()
    {
        if (this.initialized)
        {
            return;
        }

        this.initialized = true;

        this.serviceProvider = this.BuildServiceProvider();
    }

    /// <summary>
    /// Initializes the service provider.
    /// </summary>
    protected virtual System.IServiceProvider BuildServiceProvider()
    {
        Microsoft.Extensions.DependencyInjection.IServiceCollection services = new Microsoft.Extensions.DependencyInjection.ServiceCollection();

        this.ConfigureServices(services);

        this.configureServices?.Invoke(services);

        return services.BuildServiceProvider();
    }

    /// <summary>
    /// Configures the services.
    /// </summary>
    /// <param name="services">The service collection.</param>
    protected virtual void ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection services)
    {
        services
            .AddOptions();

        services.Configure<Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration>(
            hostConfiguration =>
            {
                this.ConfigureHostConfiguration(hostConfiguration);
            });

        services
            .AddOptionsSnapshot<Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration>();

        Microsoft.Extensions.DependencyInjection.IMvcBuilder mvcBuilder = services.AddMvc();

        System.IServiceProvider provider = services.BuildServiceProvider();
        
        Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration hostConfiguration = 
            provider.GetRequiredService<Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration>();

        services
            .AddCommonPart(hostConfiguration);
        
        mvcBuilder
            .AddRestApiPart(hostConfiguration);
    }

    /// <summary>
    /// Configures the services.
    /// </summary>
    /// <param name="services">The service collection.</param>
    protected virtual void ConfigureAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection services)
    {
    }

    /// <summary>
    /// Configures the host configuration.
    /// </summary>
    /// <param name="hostConfiguration">The host configuration.</param>
    protected virtual void ConfigureHostConfiguration(Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration hostConfiguration)
    {
    }

    #endregion

    #endregion
}

/// <summary>
/// Defines a test fixture used for REST API tests.
/// </summary>
/// <seealso cref="RestApiTestFixtureBase" />
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public partial class RestApiTestFixture : RestApiTestFixtureBase
{
    #region Code

    #region Public Constructors

    /// <summary>
    /// Initializes a new instance of the <see cref="RestApiTestFixture"/> class.
    /// </summary>
    /// <param name="configureServices">Allows configuring services.</param>
    public RestApiTestFixture(System.Action<Microsoft.Extensions.DependencyInjection.IServiceCollection> configureServices = null)
        : base(configureServices)
    {
    }

    #endregion

    #endregion
}

#endregion

#endregion
