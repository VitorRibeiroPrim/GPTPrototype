<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Primavera.Lithium.ChatGPT.Server.Host</name>
    </assembly>
    <members>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeController">
            <content/>
            <summary>
            Defines the controller that provides the home routes.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeController.IndexAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeController.#ctor(Microsoft.Extensions.Logging.ILogger{Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeController})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeController" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase">
            <summary>
            Defines the base class for all the controllers in the MVC application.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase.HostConfiguration">
            <summary>
            Gets the host configuration options.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase.HostEnvironment">
            <summary>
            Gets the host environment.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.AppControllerBase.Validate">
            <summary>
            Initializes a new validator.
            </summary>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeControllerBase">
            <summary>
            Defines the base class for the controller that provides the home routes.
            </summary>
            <remarks>
            This is the base class of the MVC controller.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeControllerBase.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeControllerBase" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeControllerBase.IndexAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeControllerBase.ErrorAsync(System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.HomeControllerBase.ShowErrorAsync(Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel,System.Threading.CancellationToken)">
            <summary>
            Shows the default error page for the specified view model.
            </summary>
            <param name="model">The error view model.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase">
            <summary>
            Defines the base class for the controller that provides monitoring routes.
            </summary>
            <remarks>
            This is the base class of the MVC controller.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.ProbeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.DiagnosticsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.EndpointsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.ConfigurationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.InformationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddAzureManagedConfigurationProbes(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds probes for the Azure Managed Configuration service, as part of the Probe endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddAzureManagedConfigurationDiagnostics(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds diagnostics for the Azure Managed Configuration service, as part of the Diagnostics endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddDependenciesProbes(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds probes for the dependencies of the service, as part of the Probe endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddDependenciesDiagnostics(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds diagnostics for the dependencies of the service, as part of the Diagnostics endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddServiceDependenciesDiagnostics(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds diagnostics for the service dependencies of the service, as part of the Diagnostics endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddAdditionalProbes(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds additional probes for the service, as part of the Probe endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringControllerBase.AddAdditionalDiagnostics(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder)">
            <summary>
            Adds additional diagnostics for the service, as part of the Diagnostics endpoint.
            </summary>
            <param name="builder">The probes builder.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringController">
            <summary>
            Defines the controller that provides monitoring routes.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringController.#ctor(Microsoft.Extensions.Logging.ILogger{Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringController})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.MonitoringController" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationControllerBase">
            <summary>
            Defines the base class for the controller that provides the client library documentation routes.
            </summary>
            <remarks>
            This is the base class of the MVC controller.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationControllerBase.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationControllerBase" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationControllerBase.DocumentationAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationController">
            <summary>
            Defines the controller that provides the client library documentation routes.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationController.#ctor(Microsoft.Extensions.Logging.ILogger{Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationController})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.ClientLibDocumentationController" /> class.
            </summary>
            <param name="logger">The logger.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IHomeController">
            <summary>
            Defines the interface of the controller that provides the home routes.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IHomeController.IndexAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that responds in the default (root) route.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IHomeController.ErrorAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Provides an action that responds in the error route.
            </summary>
            <param name="statusCode">The error status code.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IMonitoringController">
            <summary>
            Defines the interface of the controller that provides monitoring routes.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IMonitoringController.ProbeAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that probes the health of the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            <see cref="F:System.Net.HttpStatusCode.OK"/> with a response content describing the service health.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IMonitoringController.DiagnosticsAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that diagnoses the health of the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            <see cref="F:System.Net.HttpStatusCode.OK"/> with a response content describing the service health.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IMonitoringController.EndpointsAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that analyzes the endpoints available in the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            <see cref="F:System.Net.HttpStatusCode.OK"/> with a response content including the list of endpoints available.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IMonitoringController.ConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that analyzes the configuration of the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            <see cref="F:System.Net.HttpStatusCode.OK"/> with a response content indicating where the configuration was saved.
            </returns>
            <remarks>
            If the service uses blob storage, the configuration options will be dumped in a blob container named 'ConfigAnalyzer'. Otherwise, the configuration options will be saved in a file named 'ConfigAnalyzer.json'.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IMonitoringController.InformationAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that returns information about the service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            <see cref="F:System.Net.HttpStatusCode.OK"/> with a response content including the information about the service.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IClientLibDocumentationController">
            <summary>
            Defines the interface of the controller that provides the client library documentation routes.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Controllers.IClientLibDocumentationController.DocumentationAsync(System.Threading.CancellationToken)">
            <summary>
            Provides an action that shows the client library documentation.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The <see cref="T:Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub">
            <summary>
            The chat hub class.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.SignalR.Hub" />
        </member>
        <member name="F:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub.serviceProvider">
            <summary>
            The service provider.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub.ChatGPTManager">
            <summary>
            Gets the chat GPT manager.
            </summary>
            <value>
            The chat GPT manager.
            </value>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub.SendMessageAsync(System.String,System.String)">
            <summary>
            Sends the message.
            </summary>
            <param name="user">The user.</param>
            <param name="message">The message.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Hubs.ChatHub.SendAskAsync(System.String)">
            <summary>
            Sends the ask asynchronous.
            </summary>
            <param name="message">The message.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.
            The Primavera.Hydrogen.Result that describes the operation result.
            </returns>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Startup">
            <content/>
            <summary>
            Provides the application initialization logic.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration,Microsoft.Extensions.Logging.ILogger{Primavera.Lithium.ChatGPT.Server.Host.Startup})">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Startup.AddAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Startup.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Startup" /> class.
            </summary>
            <param name="env">The current host environment.</param>
            <param name="configuration">The current configuration.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Views.IndexModel">
            <summary>
            Index page.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.RazorPages.PageModel" />
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Views.IndexModel.OnGet">
            <summary>
            Called when [get].
            </summary>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Program">
            <summary>
            Defines the starting point of the application.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Program.Main(System.String[])">
            <summary>
            Executes the application.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase">
            <summary>
            Defines the base class for the host builder.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.CaptureStartupErrors">
            <summary>
            Gets a value indicating whether startup errors should be captured. The default value is false.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.UseDevelopmentSettings">
            <summary>
            Gets a value indicating whether development settings should be used regardless of the current environment. The default value is false.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.Build(System.String[])">
            <summary>
            Builds the <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.
            </summary>
            <param name="args">The arguments.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.Hosting.IHost" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.ConfigureAppConfiguration(Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Configures the application configuration.
            </summary>
            <param name="context">The host builder context.</param>
            <param name="builder">The configuration builder.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.ConfigureServices(Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configures the services.
            </summary>
            <param name="context">The host builder context.</param>
            <param name="services">The service collection.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.ConfigureLogging(Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Logging.ILoggingBuilder)">
            <summary>
            Configures logging.
            </summary>
            <param name="context">The host builder context.</param>
            <param name="builder">The logging builder.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.ConfigureHostConfiguration(Microsoft.Extensions.Configuration.IConfigurationBuilder)">
            <summary>
            Configures the host configuration.
            </summary>
            <param name="builder">The configuration builder.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.ConfigureWebHostDefaults(Microsoft.AspNetCore.Hosting.IWebHostBuilder)">
            <summary>
            Configures the Web host defaults.
            </summary>
            <param name="builder">The Web host builder.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilderBase.EnsureWebRootDirectory(Microsoft.Extensions.Hosting.HostBuilderContext)">
            <summary>
            Ensures that the Web root directory exists.
            </summary>
            <param name="context">The Web host builder context.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.HostBuilder">
            <summary>
            Defines the host builder.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.HostBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.HostBuilder" /> class.
            </summary>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.StartupBase">
            <summary>
            Defines the base class for the application initialization logic.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.CurrentEnvironment">
            <summary>
            Gets the current environment.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.Configuration">
            <summary>
            Gets the current configuration.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseDevelopmentSettings">
            <summary>
            Gets a value indicating whether development settings should be used regardless of the current environment. The default value is false.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.Logger">
            <summary>
            Gets the logger instance.
            </summary>
            <remarks>
            This instance is only initialized when Configure() starts.
            </remarks>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ErrorRoute">
            <summary>
            Gets the error route.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.StartupBase" /> class.
            </summary>
            <param name="env">The current host environment.</param>
            <param name="configuration">The current configuration.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Called by the runtime when the application starts to allow the application to configure its services.
            </summary>
            <param name="services">The services collection.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration,Microsoft.Extensions.Logging.ILogger{Primavera.Lithium.ChatGPT.Server.Host.Startup})">
            <summary>
            Called by the runtime when the application starts to allow the application to configure itself.
            </summary>
            <param name="app">The current application.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddApplicationParts(Microsoft.Extensions.DependencyInjection.IMvcBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to configure the MVC application parts.
            </summary>
            <param name="builder">The MVC builder.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from AddMvc().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddHttpTelemetry(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to configure the HTTP Telemetry middleware.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddAdditionalServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add additional (custom) services to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddHttpClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add the HTTP Client factory to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from AddAdditionalServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddOpenApiDocumentation(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add the OpenAPI documentation.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureOpenApiDocument(NSwag.Generation.AspNetCore.AspNetCoreOpenApiDocumentGeneratorSettings,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to configure an OpenAPI document.
            </summary>
            <param name="options">The OpenAPI document configuration options.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from AddOpenApiDocumentation().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Called to add configuration to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            An instance of <see cref="T:Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration"/> that can be used in the application configuration process.
            </returns>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureHostConfiguration(Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to customize host configuration.
            </summary>
            <param name="options">The configuration delegate.</param>
            <remarks>
            The method is called from AddConfiguration().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddCookiePolicy(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add the cookie policy to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.CheckCookiesSameSite(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.CookieOptions,System.Boolean)">
            <summary>
            Called to check the <see cref="P:Microsoft.AspNetCore.Http.CookieOptions.SameSite"/> cookie setting.
            </summary>
            <param name="httpContext">The HTTP context.</param>
            <param name="options">The cookie options.</param>
            <param name="appending">A value indicating whether the cookie is being appended. If false, the cookie is being deleted.</param>
            <remarks>
            The method is called from when a new cookie is appended or deleted.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.DisallowsCookiesSameSiteNone(System.String)">
            <summary>
            Called to determine whether the specified user agent disallows <see cref="F:Microsoft.AspNetCore.Http.SameSiteMode.None"/> in the <see cref="P:Microsoft.AspNetCore.Http.CookieOptions.SameSite"/> cookie setting.
            </summary>
            <param name="userAgent">The user agent.</param>
            <returns>
            A value indicating whether the specified user agent disallows <see cref="F:Microsoft.AspNetCore.Http.SameSiteMode.None"/> in the <see cref="P:Microsoft.AspNetCore.Http.CookieOptions.SameSite"/> cookie setting.
            </returns>
            <remarks>
            The method is called from <see cref="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.CheckCookiesSameSite(Microsoft.AspNetCore.Http.HttpContext,Microsoft.AspNetCore.Http.CookieOptions,System.Boolean)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add dependencies to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddServiceDependencies(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add service dependencies to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddTelemetry(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add telemetry to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddMvc(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add MVC to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <returns>
            The MVC builder.
            </returns>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureMvc(Microsoft.Extensions.DependencyInjection.IMvcBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to configure MVC after it is added to the service collection.
            </summary>
            <param name="builder">The MVC builder.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from AddMvc().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureApiVersioningOptions(Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions)">
            <summary>
            Called to configure the API versioning options.
            </summary>
            <param name="options">The options.</param>
            <remarks>
            The method is called from AddMvc().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureJsonOptions(Microsoft.AspNetCore.Mvc.JsonOptions)">
            <summary>
            Called to configure the MVC JSON serializer options.
            </summary>
            <param name="options">The options.</param>
            <remarks>
            The method is called from AddMvc().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddBackgroundServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add background services to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ValidateConfiguration(Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to validate configuration.
            </summary>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ValidateConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to validate configuration.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseErrorHandling(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate error handling.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseInteractiveErrorHandling(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Determines whether interactive error handling should be applied to the current request.
            </summary>
            <param name="httpContext">The HTTP context.</param>
            <returns>
            A value indicating whether interactive error handling should be applied to the current request.
            </returns>
            <remarks>
            The method is called from UseErrorHandling().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseHttps(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate HTTPS (HSTS and HTTPS redirection).
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseStaticFiles(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate MVC static files.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseRequestLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate request localization.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureRequestLocalization(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Builder.RequestLocalizationOptions,System.Collections.Generic.IList{System.Globalization.CultureInfo},Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to configure additional request localization options.
            </summary>
            <param name="app">The application builder.</param>
            <param name="options">The request localization options.</param>
            <param name="cultures">The cultures supported.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from UseRequestLocalization().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseHttpTelemetry(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate HTTP telemetry.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseRouting(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate routing.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseCors(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate CORS.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseCookiePolicy(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate the cookie policy.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate endpoint routing.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.ConfigureEndpoints(Microsoft.AspNetCore.Routing.IEndpointRouteBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to configure endpoint routing after the middleware is added to the pipeline.
            </summary>
            <param name="builder">The endpoint route builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from UseEndpoints().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseAzureManagedConfiguration(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to activate Azure Managed Configuration to refresh configuration at a recurring intervals.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure().
            This sets up Azure App Configuration.
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AdditionalAppConfigurations(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to perform additional application configurations.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure() (just before ending).
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseOpenApiDocumentation(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to active the OpenAPI documentation.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure() (just before ending).
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddMarkdownDocumentation(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to add the services required for markdown documentation.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <remarks>
            The method is called from ConfigureServices().
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.UseMarkdownDocumentation(Microsoft.AspNetCore.Builder.IApplicationBuilder,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called to active the markdown documentation.
            </summary>
            <param name="app">The application builder.</param>
            <param name="hostConfiguration">The current host configuration.</param>
            <remarks>
            The method is called from Configure() (just before ending).
            </remarks>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddAzureManagedConfiguration(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called when configuring services required to activate Azure Managed Configuration.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddHealthMonitoring(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called when configuring services required to activate health monitoring.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.StartupBase.AddServiceCatalog(Microsoft.Extensions.DependencyInjection.IServiceCollection,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Called when configuring services required to activate the service catalog.
            </summary>
            <param name="services">The service collection.</param>
            <param name="hostConfiguration">The host configuration.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModelBase">
            <summary>
            Defines the base class for the view model that represents an error message.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModelBase.Error">
            <summary>
            Gets or sets the error.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModelBase.ErrorDescription">
            <summary>
            Gets or sets the error description.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModelBase.IsExpected">
            <summary>
            Gets or sets a value indicating whether the error is expected.
            </summary>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModel">
            <summary>
            Defines the view model that represents an error message.
            </summary>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase">
            <summary>
            Defines the base class for the view model used by the error view.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError">
            <summary>
            Gets a value indicating whether the error resulted from an error status code.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.ErrorStatusCode">
            <summary>
            Gets the error status code. Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.ErrorOriginalPath">
            <summary>
            Gets the original path of the request that caused the error. Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.ErrorOriginalQueryString">
            <summary>
            Gets the original query string of the request that caused the error. Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.UserSignedIn">
            <summary>
            Gets a value indicating whether the user is signed-in. Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.UserEmail">
            <summary>
            Gets the email of the user that is signed-in (if any). Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.ErrorId">
            <summary>
            Gets the error identifier. Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is false.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.Message">
            <summary>
            Gets the error message. Meaningful only if <see cref="P:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.IsStatusCodeError"/> is false.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.#ctor(System.Int32,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase" /> class.
            </summary>
            <param name="statusCode">The error status code.</param>
            <param name="originalPath">The original path (if any).</param>
            <param name="originalQueryString">The original query string (if any).</param>
            <param name="userSignedIn">A value indicating whether a user is signed-in.</param>
            <param name="userEmail">The signed-in user (if any).</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase.#ctor(System.String,Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase" /> class.
            </summary>
            <param name="errorId">The error identifier.</param>
            <param name="message">The error message</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel">
            <summary>
            Defines the view model used by the error view.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel.#ctor(System.Int32,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel" /> class.
            </summary>
            <param name="statusCode">The error status code.</param>
            <param name="originalPath">The original path (if any).</param>
            <param name="originalQueryString">The original query string (if any).</param>
            <param name="userSignedIn">A value indicating whether a user is signed-in.</param>
            <param name="userEmail">The signed-in user (if any).</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel.#ctor(System.String,Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorMessageViewModel)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModelBase" /> class.
            </summary>
            <param name="errorId">The error identifier.</param>
            <param name="message">The error message</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel.GetPageTitle(Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel,Primavera.Lithium.ChatGPT.Server.Common.Configuration.HostConfiguration)">
            <summary>
            Gets the error page title.
            </summary>
            <param name="model">The view model.</param>
            <param name="hostConfiguration">The host configuration.</param>
            <returns>
            The error page title.
            </returns>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel.GetTitle(Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel,System.String@)">
            <summary>
            Gets the error title.
            </summary>
            <param name="model">The view model.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel.GetDescriptionHtml(Primavera.Lithium.ChatGPT.Server.Host.ViewModels.ErrorViewModel,System.String@,System.String@)">
            <summary>
            Gets the error description HTML.
            </summary>
            <param name="model">The view model.</param>
            <param name="description">The description.</param>
            <param name="additionalInformation">The additional information.</param>
        </member>
        <member name="T:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources">
            <summary>
            Provides means to access resource strings.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_NoFeaturesForWebBrowsers">
            <summary>
            Gets the 'RES_NoFeaturesForWebBrowsers' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_ClientLibraryDocumentation">
            <summary>
            Gets the 'RES_ClientLibraryDocumentation' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_RestApiDocumentation">
            <summary>
            Gets the 'RES_RestApiDocumentation' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_WebhooksDocumentation">
            <summary>
            Gets the 'RES_WebhooksDocumentation' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_PageTitle_Error">
            <summary>
            Gets the 'RES_PageTitle_Error' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_PageTitle_Error_StatusCode">
            <summary>
            Gets the 'RES_PageTitle_Error_StatusCode' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_Error">
            <summary>
            Gets the 'RES_Title_Error' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_400">
            <summary>
            Gets the 'RES_Title_400' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_401">
            <summary>
            Gets the 'RES_Title_401' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_403">
            <summary>
            Gets the 'RES_Title_403' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_404">
            <summary>
            Gets the 'RES_Title_404' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_405">
            <summary>
            Gets the 'RES_Title_405' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_500">
            <summary>
            Gets the 'RES_Title_500' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Title_StatusCode">
            <summary>
            Gets the 'RES_Title_StatusCode' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_Unexpected">
            <summary>
            Gets the 'RES_Description_Unexpected' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_400">
            <summary>
            Gets the 'RES_Description_400' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_401">
            <summary>
            Gets the 'RES_Description_401' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_403">
            <summary>
            Gets the 'RES_Description_403' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_404">
            <summary>
            Gets the 'RES_Description_404' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_405">
            <summary>
            Gets the 'RES_Description_405' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_500">
            <summary>
            Gets the 'RES_Description_500' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_StatusCode">
            <summary>
            Gets the 'RES_Description_StatusCode' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Description_Unexpected_ErrorId">
            <summary>
            Gets the 'RES_Description_Unexpected_ErrorId' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_ErrorId">
            <summary>
            Gets the 'RES_ErrorId' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_SignedInAs">
            <summary>
            Gets the 'RES_SignedInAs' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Version">
            <summary>
            Gets the 'RES_Version' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.RES_Build">
            <summary>
            Gets the 'RES_Build' resource string.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.ResourceManager">
            <summary>
            Gets the resource manager.
            </summary>
        </member>
        <member name="P:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
        </member>
        <member name="M:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Lithium.ChatGPT.Server.Host.Localization.ViewsResources"/> class.
            </summary>
        </member>
    </members>
</doc>
