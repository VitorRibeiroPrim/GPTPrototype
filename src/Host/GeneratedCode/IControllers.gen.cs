//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace Primavera.Lithium.ChatGPT.Server.Host.Controllers;

#region Code

#region Public Interfaces

/// <summary>
/// Defines the interface of the controller that provides the home routes.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public partial interface IHomeController
{
    #region Code

    #region Methods

    /// <summary>
    /// Provides an action that responds in the default (root) route.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> IndexAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Provides an action that responds in the error route.
    /// </summary>
    /// <param name="statusCode">The error status code.</param>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ErrorAsync(int statusCode, System.Threading.CancellationToken cancellationToken = default);

    #endregion

    #endregion
}

/// <summary>
/// Defines the interface of the controller that provides monitoring routes.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public partial interface IMonitoringController
{
    #region Code

    #region Methods

    /// <summary>
    /// Provides an action that probes the health of the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// <see cref="System.Net.HttpStatusCode.OK"/> with a response content describing the service health.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ProbeAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Provides an action that diagnoses the health of the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// <see cref="System.Net.HttpStatusCode.OK"/> with a response content describing the service health.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> DiagnosticsAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Provides an action that analyzes the endpoints available in the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// <see cref="System.Net.HttpStatusCode.OK"/> with a response content including the list of endpoints available.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> EndpointsAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Provides an action that analyzes the configuration of the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// <see cref="System.Net.HttpStatusCode.OK"/> with a response content indicating where the configuration was saved.
    /// </returns>
    /// <remarks>
    /// If the service uses blob storage, the configuration options will be dumped in a blob container named 'ConfigAnalyzer'. Otherwise, the configuration options will be saved in a file named 'ConfigAnalyzer.json'.
    /// </remarks>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> ConfigurationAsync(System.Threading.CancellationToken cancellationToken = default);

    /// <summary>
    /// Provides an action that returns information about the service.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// <see cref="System.Net.HttpStatusCode.OK"/> with a response content including the information about the service.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> InformationAsync(System.Threading.CancellationToken cancellationToken = default);

    #endregion

    #endregion
}

/// <summary>
/// Defines the interface of the controller that provides the client library documentation routes.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("Lithium", "5")]
public partial interface IClientLibDocumentationController
{
    #region Code

    #region Methods

    /// <summary>
    /// Provides an action that shows the client library documentation.
    /// </summary>
    /// <param name="cancellationToken">The cancellation token.</param>
    /// <returns>
    /// The <see cref="System.Threading.Tasks.Task{TResult}"/> that represents the asynchronous operation.
    /// The <see cref="Microsoft.AspNetCore.Mvc.IActionResult"/> that describes the action result.
    /// </returns>
    System.Threading.Tasks.Task<Microsoft.AspNetCore.Mvc.IActionResult> DocumentationAsync(System.Threading.CancellationToken cancellationToken = default);

    #endregion

    #endregion
}

#endregion

#endregion
