<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Primavera.Hydrogen.AspNetCore</name>
    </assembly>
    <members>
        <member name="T:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeBuilder">
            <summary>
            Allows building HTTP bearer challenges.
            </summary>
            <remarks>
            For more information on what is an HTTP bearer challenge see: https://tools.ietf.org/html/rfc6750.
            The WWW-Authenticate header is used to return the challenge to the client.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeBuilder.BuildHeader(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerChallengeContext,System.String)">
            <summary>
            Builds a WWW-Authenticate header containing the HTTP bearer challenge that should be returned to the client.
            </summary>
            <param name="context">The bearer challenge context. This is the argument of the <see cref="M:Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents.Challenge(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerChallengeContext)"/> event.</param>
            <param name="scope">The scope that should be added in the header. It should be a space-delimited of case-sensitive scope values.</param>
            <example>
            This method should be called from the <see cref="M:Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents.Challenge(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerChallengeContext)"/> event like in the following example:
            <code>
            <![CDATA[
            // Add the JWT bearer middleware (in the REST API host)
            
            authentication.AddJwtBearer(
                (options) =>
                {
                    (...)
                    options.Events = new JwtBearerEvents()
                    {
                        OnChallenge = HandleChallenge
                    };
                });
                
            // Handle the event
            
            private static Task HandleChallenge(JwtBearerChallengeContext context)
            {
                HttpBearerChallengeBuilder.BuildHeader(context, "MyScope");
                return Task.CompletedTask;
            }
            ]]>
            </code>
            Alternatively, <see cref="T:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeEvents"/> can be used instead:
            <code>
            <![CDATA[
            // Add the JWT bearer middleware (in the REST API host)
            
            authentication.AddJwtBearer(
                (options) =>
                {
                    (...)
                    options.Events = new HttpBearerChallengeEvents("MyScope");
                });
            ]]>
            </code>
            </example>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeEvents">
            <summary>
            Specifies events that <see cref="T:Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler"/> invokes during the
            authentication process. This class automatically builds a HTTP Bearer challenge,
            using <see cref="T:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeBuilder"/> in the <see cref="P:Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerEvents.OnChallenge"/>
            event.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeEvents.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeEvents"/> class.
            </summary>
            <param name="defaultScope">The scope(s) that should be included in the challenge by default.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authentication.JwtBearer.HttpBearerChallengeEvents.Challenge(Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerChallengeContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Authorization.AuthorizationPolicyBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authorization.AuthorizationPolicyBuilderExtensions.RequireScope(Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder,System.String[])">
            <summary>
            Adds a <see cref="T:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement" /> to the current instance which requires
            that the current user has the specified scope.
            </summary>
            <param name="builder">The builder.</param>
            <param name="scopes">The scope(s) required.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder" /> instance.
            </returns>
            <remarks>
            If the scopes are not present, the requirement will add them to the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> items
            so that the WWW-Authenticate header can be built correctly.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authorization.AuthorizationPolicyBuilderExtensions.RequireScope(Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Adds a <see cref="T:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement" /> to the current instance which requires
            that the current user has the specified scope.
            </summary>
            <param name="builder">The builder.</param>
            <param name="scopes">The scope(s) required.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.Authorization.AuthorizationPolicyBuilder" /> instance.
            </returns>
            <remarks>
            If the scopes are not present, the requirement will add them to the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> items
            so that the WWW-Authenticate header can be built correctly.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement">
            <summary>
            Implements an <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationHandler"/> and <see cref="T:Microsoft.AspNetCore.Authorization.IAuthorizationRequirement"/>
            which requires the specified scope(s).
            </summary>
            <remarks>
            If the scopes are not present, the requirement will add them to the <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/> items
            so that the WWW-Authenticate header can be built correctly.
            </remarks>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement.ItemKey">
            <summary>
            The key of the <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Items"/> that stores the scope(s).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement.Scopes">
            <summary>
            Gets the scope(s) that must be present.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement"/> class.
            </summary>
            <param name="scopes">The scope(s) required.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement.HandleRequirementAsync(Microsoft.AspNetCore.Authorization.AuthorizationHandlerContext,Primavera.Hydrogen.AspNetCore.Authorization.ScopeAuthorizationRequirement)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService">
            <summary>
            Defines the default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService.Analyze">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService.AnalyzeDebug">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService.SaveAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.DefaultConfigurationAnalyzerService.SaveDebugAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Configuration.ConfigurationAnalyzerServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type that
            allows registering the configuration analyzer service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.ConfigurationAnalyzerServiceCollectionExtensions.AddConfigurationAnalyzer(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the configuration analyzer service to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService"/> is registered as transient.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService">
            <summary>
            Defines the interface of the configuration analyzer service.
            The configuration analyzer service allows retrieving the all the application settings
            active in the application.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService.Analyze">
            <summary>
            Retrieves all the application settings active in the application.
            </summary>
            <returns>
            The application settings active in the application.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService.SaveAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Saves all the application settings active in the application.
            </summary>
            <param name="identifier">The identifier used to name the blob or file used to save the configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            Information about the location where the configuration was saved.
            </returns>
            <remarks>
            Configuration is saved to a blob if <see cref="T:Primavera.Hydrogen.Storage.Blobs.IBlobStorageService"/> is available.
            Otherwise it will be saved to a file.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService.AnalyzeDebug">
            <summary>
            Retrieves a human-readable view of all the configuration settings active in the application,
            showing where each value came from.
            </summary>
            <returns>
            A human-readable view of all the configuration settings active in the application.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Configuration.IConfigurationAnalyzerService.SaveDebugAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Saves a human-readable view of all the configuration settings active in the application,
            showing where each value came from.
            </summary>
            <param name="identifier">The identifier used to name the blob or file used to save the configuration.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            Information about the location where the configuration was saved.
            </returns>
            <remarks>
            Configuration is saved to a blob if <see cref="T:Primavera.Hydrogen.Storage.Blobs.IBlobStorageService"/> is available.
            Otherwise it will be saved to a file.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase">
            <summary>
            Defines the base class for a background service.
            </summary>
            <seealso cref="T:Microsoft.Extensions.Hosting.IHostedService" />
            <seealso cref="T:System.IDisposable" />
            <remarks>
            This base class can be used to implement a different kind of background
            service not supported by <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService"/>, <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService"/>
            or <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1"/>. It provides the most basic
            shared functionality (e.g. exception handling) and it enforces the
            basic lifetime of the service (Start - Execute - Stop).
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Name">
            <summary>
            Gets the background service name.
            </summary>
            <remarks>
            The name must be unique.
            It will be used for locking and in logging messages and other purposes.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Logger">
            <summary>
            Gets the logger.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Id">
            <summary>
            Gets a unique identifier of the background service instance.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Enabled">
            <summary>
            Gets a value indicating whether the background service is enabled.
            If false, the background service will not be started.
            </summary>
            <remarks>
            This property is only evaluated when the background service starts.
            It allows, for example, to disable a background service based on configuration,
            on a specific hosting scenario, etc.
            Be aware that background services are always disabled when running in preview
            slots (<see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.IsPreviewSlot"/>).
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.HandleExceptions">
            <summary>
            Gets a value indicating whether the background service should handle exceptions.
            </summary>
            <remarks>
            When true, the background service will catch all exceptions and invoke <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.HandleExceptionAsync(System.Exception,System.Threading.CancellationToken)"/>.
            Otherwise it will throw the exception.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.DelayedExecutionTime">
            <summary>
            Gets the delayed execution time.
            When greater the zero, the first execution of the background service will only start after the
            specified time elapses.
            </summary>
            <remarks>
            This is useful in scenarios where you don't want a background service to start immediately after
            the application starts or when you need some background service to start before another one.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.ApplicationInitializationAutoComplete">
            <summary>
            Gets a value indicating whether the background service should signal automatically that application initialization
            has completed.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.RootServiceProvider">
            <summary>
            Gets the root service provider.
            </summary>
            <remarks>
            This service provider is for internal use only. To resolve services (including scoped services)
            in background services, the execution context background service should be used instead.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts the execution of the background service.
            Triggered when the application host is ready to start the service.
            </summary>
            <param name="cancellationToken">The cancellation token, which indicates that the start process has been aborted.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method runs only once, when the application host is ready to start the service.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stops the execution of the background service.
            Triggered when the application host is performing a graceful shutdown.
            </summary>
            <param name="cancellationToken">The cancellation token, which indicates that the shutdown process should no longer be graceful.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method runs only once, when the application host requests the service to be stopped.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Initialize(System.IServiceProvider)">
            <summary>
            Initializes the background service.
            </summary>
            <param name="serviceProvider">The root service provider.</param>
            <remarks>
            This method can be overridden to initialize properties of the background
            service (like <see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Enabled"/>) based on configuration for example.
            It runs only once, immediately after the background service is started.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.IsEnabled">
            <summary>
            Determines whether the background service is enabled.
            </summary>
            <returns>
            A value indicating whether the background service is enabled.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
            Executes the background service after it starts.
            </summary>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method runs only once, after the background service is started.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.DelayExecutionAsync(System.Threading.CancellationToken)">
            <summary>
            Delays the execution of the background service.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method runs only once, after the background service is started.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.HandleExceptionAsync(System.Exception,System.Threading.CancellationToken)">
            <summary>
            Handles the specified exception.
            </summary>
            <param name="exception">The exception that should be handled.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.ValueTask"/> that represents the asynchronous operation.
            </returns>
            <remarks>
            By default, the exception is recorded using the logger.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext">
            <summary>
            Defines the execution context of a background service.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.Name">
            <summary>
            Gets the background service the name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.Count">
            <summary>
            Gets the number of times the background service has executed, including this one.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.Hash">
            <summary>
            Gets a unique hash that identifies the background service instance.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.ApplicationServices">
            <summary>
            Gets the application services, scoped to the background service lifetime.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.Logger">
            <summary>
            Gets the background service logger.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.HostEnvironment">
            <summary>
            Gets the host environment.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.OperationId">
            <summary>
            Gets a unique operation identifier.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.#ctor(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase,Microsoft.Extensions.DependencyInjection.IServiceScope)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext" /> class.
            </summary>
            <param name="service">The background service.</param>
            <param name="serviceScope">The service scope.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.#ctor(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase,Microsoft.Extensions.DependencyInjection.IServiceScope,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext" /> class.
            </summary>
            <param name="service">The background service.</param>
            <param name="serviceScope">The service scope.</param>
            <param name="count">The number of times the background service has executed, including this one.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext.InitializationCompleted">
            <summary>
            Signals that the background service has completed initialization.
            </summary>
            <remarks>
            This method uses the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals"/> to trigger
            the signal.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext`1">
            <summary>
            Defines the execution context of a background service.
            </summary>
            <typeparam name="TWorkItem">The type of the background service work items.</typeparam>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext`1.WorkItem">
            <summary>
            Gets the background service work item.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext`1.#ctor(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase,Microsoft.Extensions.DependencyInjection.IServiceScope,System.Int64,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext`1" /> class.
            </summary>
            <param name="service">The background service.</param>
            <param name="serviceScope">The service scope.</param>
            <param name="count">The number of times the background service has executed, including this one.</param>
            <param name="workItem">The background service work item.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1">
            <summary>
            Defines a background work queue.
            This queue is used to initiate work items of behalf of queued background services.
            </summary>
            <typeparam name="TWorkItem">The type of the background service work items.</typeparam>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1" />
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Count">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Enqueue(`0)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.DequeueAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Dispose">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundWorkQueue`1.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData">
            <summary>
            Describes information about a lock as stored by <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.Hash">
            <summary>
            Gets or sets the hash.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.Timestamp">
            <summary>
            Gets or sets the timestamp.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.#ctor(System.String,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData"/> class.
            </summary>
            <param name="hash">The hash.</param>
            <param name="timestamp">The timestamp.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.ToJson">
            <summary>
            Converts to JSON.
            </summary>
            <returns>
            The JSON representation of this instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.FromJson(System.String)">
            <summary>
            Creates a <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData"/> from the specified JSON representation.
            </summary>
            <param name="json">The JSON representation.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BlobStorageLockData.CanIgnore(System.String,System.TimeSpan)">
            <summary>
            Determines whether this lock can be ignored.
            </summary>
            <param name="hash">The hash.</param>
            <param name="expiration">The expiration.</param>
            <returns>
            A lock can be ignored if the hash matches or it has expired.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.DefaultBackgroundServicesSignals">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals"/> that stores signals in memory.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultBackgroundServicesSignals.SetInitializationCompleted(System.Type,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultBackgroundServicesSignals.GetInitializationCompleted(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.DefaultBackgroundServicesTelemetryService">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesTelemetryService"/> that uses <see cref="T:Primavera.Hydrogen.Telemetry.ITelemetryClientService"/>
            to record each operation as request telemetry.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesTelemetryService" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultBackgroundServicesTelemetryService.Start(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Action{Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperationInfo})">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/> that uses <see cref="T:Primavera.Hydrogen.Storage.Blobs.IBlobStorageService"/>
            to store a blob as the lock for each background service.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService" />
            <remarks>
            The blob storage service is named "Locking". If not configured, the default service
            will be used.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService.#ctor(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService" /> class.
            </summary>
            <param name="options">The configuration options.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService.TryAcquireLockAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService.GetLockName(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext)">
            <summary>
            Gets the name that should be used for the lock.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The lock name.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.DefaultLockingService.LockNameRegEx">
            <remarks>
            Pattern explanation:<br/>
            <code>
            ○ Match a character in the set [^-0-9A-Za-z].<br/>
            </code>
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesBuilder">
            <summary>
            Provides a default implementation for the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> interface.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesBuilder.Services">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesBuilder"/> class.
            </summary>
            <param name="services">The service collection.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions">
            <summary>
            Defines the options used to configure the services required by background services.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions.Locking">
            <summary>
            Gets or sets the locking configuration options.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that allow registering background services.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Creates a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> using
            configuration defined by <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions"/> and adds all the
            other required services.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> instance.
            </returns>
            <remarks>
            The following services required by background services are registered: <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/>,
            <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals"/>, <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesTelemetryService"/>,
            <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesOptions})">
            <summary>
            Creates a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> using the
            specified configuration options and adds all the
            other required services.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> instance.
            </returns>
            <remarks>
            The following services required by background services are registered: <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/>,
            <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals"/>, <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesTelemetryService"/>,
            <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions"/>.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that register the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions"/> service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentServiceCollectionExtensions.AddHostEnvironmentExtensions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Tries to register the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions"/>.
            </summary>
            <param name="services">The service collection.</param>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder">
            <summary>
            Defines the interface of the background services builder.
            The builder allows registering and configuring background services.
            </summary>
            <remarks>
            An instance of the build is initialized using
            <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesServiceCollectionExtensions.AddBackgroundServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder.Services">
            <summary>
            Gets the service collection.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilderExtensions.AddBackgroundService``1(Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder)">
            <summary>
            Registers a background service of the specified type.
            </summary>
            <typeparam name="TBackgroundService">The type of the background service that should be registered.</typeparam>
            <param name="builder">The builder.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilderExtensions.AddBackgroundService``1(Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder,System.Func{System.IServiceProvider,``0})">
            <summary>
            Registers a background service of the specified type.
            </summary>
            <typeparam name="TBackgroundService">The type of the background service that should be registered.</typeparam>
            <param name="builder">The builder.</param>
            <param name="implementationFactory">The factory function that should be used to create new instances of the background service.</param>
            <returns>The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.LockingOptions">
            <summary>
            Defines the options used to configure locking in background services.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.LockingOptions.MaxRetries">
            <summary>
            Gets or sets the number of times to retry to acquire a lock.
            The default value is 1.
            </summary>
            <remarks>
            The maximum number is 3.
            Will wait <see name="WaitTime"/> before each retry.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.LockingOptions.WaitTime">
            <summary>
            Gets or sets the time to wait before retrying to acquire a lock.
            The default value is 30 seconds.
            </summary>
            <remarks>
            The minimum time is 15 seconds.
            The maximum time is 5 minutes.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.LockingOptions.AbsoluteExpiration">
            <summary>
            Gets or sets the lock absolute expiration.
            The default value is 5 minutes.
            </summary>
            <remarks>
            The minimum time is 3 minutes.
            The maximum time is 1 hour.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.LockingOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.LockingOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesHealthExtensions">
            <summary>
            Provides extension methods to configure health monitoring probes
            and diagnostics.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServicesHealthExtensions.AddBackgroundServiceProbe``1(Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder,System.String,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Adds a probe for the specified background service.
            </summary>
            <typeparam name="TBackgroundService">The type of background service that should be probed.</typeparam>
            <param name="builder">The builder.</param>
            <param name="name">The health probe name.</param>
            <param name="unhealthyDescription">The description that should be used if the probe determines that the background service is unhealthy.</param>
            <param name="timeout">The health probe timeout.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.HealthMonitoring.IHealthProbesBuilder"/> instance.
            </returns>
            <remarks>
            This probe determines whether the specified background service has signaled
            that it has completed application initialization procedures. If it has not,
            the probe will report an unhealthy status.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions">
            <summary>
            Defines the default implementation for the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.ApplicationName">
            <inheritdoc/>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.ContentRootFileProvider">
            <inheritdoc/>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.ContentRootPath">
            <inheritdoc/>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.EnvironmentName">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.#ctor(Microsoft.Extensions.Hosting.IHostEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions" /> class.
            </summary>
            <param name="environment">The current environment.</param>
            <param name="configuration">The current configuration.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.IsLocalDevelopment">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.HostEnvironmentExtensions.IsPreviewSlot">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals">
            <summary>
            Defines the interface of a service that is capable of storing signals triggered by background services.
            </summary>
            <remarks>
            This service is used by background services to trigger signals (e.g. to indicate that it has completed
            initialization required for the application to function properly).
            These signals can be monitored by other application components using this service.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals.SetInitializationCompleted(System.Type,System.Boolean)">
            <summary>
            Sets the initialization completed signal value for the specified background service.
            </summary>
            <param name="backgroundServiceType">The type of the background service.</param>
            <param name="value">The signal value.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesSignals.GetInitializationCompleted(System.Type)">
            <summary>
            Gets the initialization completed signal value for the specified background service.
            </summary>
            <param name="backgroundServiceType">The type of the background service.</param>
            <returns>
            The signal value.
            Null means that the background service has not completed initialization.
            False means that the background service has completed initialization but did not do anything
            because it is disabled.
            True means that the background service has completed initialization successfully.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesTelemetryService">
            <summary>
            Defines the interface of the background services telemetry service.
            This service allows recording telemetry for each background service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesTelemetryService.Start(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Action{Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperationInfo})">
            <summary>
            Starts a new telemetry operation.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="configureDelegate">An optional delegate that allows configuring the telemetry operation.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1">
            <summary>
            Defines the interface of a background work queue.
            This queue is used to initiate work items of behalf of queued background services.
            </summary>
            <typeparam name="TWorkItem">The type of the background service work items.</typeparam>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1.Count">
            <summary>
            Gets the number of work items contained in the queue.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1.Enqueue(`0)">
            <summary>
            Enqueues the execution of a work item.
            </summary>
            <param name="workItem">The work item that should be executed.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1.DequeueAsync(System.Threading.CancellationToken)">
            <summary>
            Dequeues the next work item set for execution.
            Returns null if the operation is canceled.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            A <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            The work item that should be executed.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions">
            <summary>
            Defines the interface of the host environment extensions service.
            This service provides extensions for the <see cref="T:Microsoft.Extensions.Hosting.IHostEnvironment"/> service.
            </summary>
            <seealso cref="T:Microsoft.Extensions.Hosting.IHostEnvironment" />
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.PreviewSlotEnvironmentVariable">
            <summary>
            The name of the environment variable that indicates that the host is running
            in a preview slot.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.LocalDevelopmentEnvironmentVariable">
            <summary>
            The name of the environment variable that indicates that the host is running
            in a local development environment.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.IsPreviewSlot">
            <summary>
            Checks if the application is running in the preview slot.
            </summary>
            <returns>
            A value indicating whether the application is running in the preview slot.
            This is only true if the application is running in the production environment
            and the <see cref="F:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.PreviewSlotEnvironmentVariable"/> environment variable is set.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.IsLocalDevelopment">
            <summary>
            Checks if the application is running in the a local development environment.
            </summary>
            <returns>
            A value indicating whether the application is running a local development environment.
            This is only true if the application is running in the development environment
            and the <see cref="F:Primavera.Hydrogen.AspNetCore.Hosting.IHostEnvironmentExtensions.LocalDevelopmentEnvironmentVariable"/> environment variable is set.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService">
            <summary>
            Defines the interface of a service that is capable of preventing multiple instances
            of a background service to run at the same time.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService.TryAcquireLockAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Tries to acquire a pessimistic lock to prevent another instance
            of the background service to run at the same time.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1"/> that represents the asynchronous operation.
            A <see cref="T:System.IAsyncDisposable"/> that represents the lock. Null if the lock
            could not be obtained.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.LockingException">
            <summary>
            Defines the exception used by <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/> to identify an operation
            that should be retried.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.LockingException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.LockingException"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.NullLockingService">
            <summary>
            Defines a <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/> implementation that does
            no locking at all.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.NullLockingService.Default">
            <summary>
            Gets the default instance.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.NullLockingService.TryAcquireLockAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1">
            <summary>
            Defines the base class for a queued background service.
            A queued background service executes repeatedly until it is canceled/stopped, waiting for a new work item
            to become available in the queue.
            </summary>
            <typeparam name="TWorkItem">The type of the background service work item.</typeparam>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase" />
            <remarks>
            The work that should be executed by the background service should be implemented
            in <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.ExecuteWorkAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext{`0},System.Threading.CancellationToken)"/>.
            The work item is retrieved from a queue of type <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundWorkQueue`1"/>.
            The background service can be registered using <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.InitializeApplicationAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Performs initialization of the application running the background service.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <remarks>
            (<see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.ApplicationInitializationAutoComplete"/>).
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.ExecuteWorkAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext{`0},System.Threading.CancellationToken)">
            <summary>
            Executes the background service work, every time a new worker is available in the queue.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.DequeueWorkItemAsync(System.Threading.CancellationToken)">
            <summary>
            Dequeues the next work item from the queue.
            </summary>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task`1" /> that represents the asynchronous operation.
            The work item. May be null if the dequeue operation is canceled (for example).
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.QueuedBackgroundService`1.StartTelemetry(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext{`0})">
            <summary>
            Starts the telemetry operation.
            </summary>
            <param name="context">The background service execution context.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation" /> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext">
            <summary>
            Defines a <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> that uses the source
            generator to speed up serialization.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.DateTime">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.BlobStorageLockData">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SerializerContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService">
            <summary>
            Defines the base class for a simple background service.
            A simple background service executes only once when the application starts.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase" />
            <remarks>
            The work that should be executed by the background service should be implemented
            in <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.ExecuteWorkAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)"/>.
            The background service can be registered using <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/>.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.UseLocking">
            <summary>
            Gets a value indicating whether locking should be applied to prevent multiple instances
            of the background service to run at the same time.
            </summary>
            <remarks>
            When true, the locking mechanism will be provider by <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.InitializeApplicationAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Performs initialization of the application running the background service.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <remarks>
            (<see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.ApplicationInitializationAutoComplete"/>).
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.ExecuteWorkAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Executes the background service work.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <remarks>
            This method runs only once, when the background service is executed, after acquiring a lock.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.GetLocker(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext)">
            <summary>
            Gets the instance of <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService" /> that should be used.
            </summary>
            <param name="context">The background service execution context.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.SimpleBackgroundService.StartTelemetry(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext)">
            <summary>
            Starts the telemetry operation.
            </summary>
            <param name="context">The background service execution context.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation" /> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation">
            <summary>
            Describes a telemetry operation.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation.#ctor(Primavera.Hydrogen.Telemetry.IRequestTelemetryOperation)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation"/> class.
            </summary>
            <param name="innerOperation">The inner operation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation.Success">
            <summary>
            Indicates that the operation succeeded.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation.Exception(System.Exception)">
            <summary>
            Indicates that the operation failed with the specified exception.
            </summary>
            <param name="exception">The exception raised.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperationInfo">
            <summary>
            Defines the information used to create a <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperationInfo.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperationInfo.OperationId">
            <summary>
            Gets or sets the operation identifier.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperationInfo.OperationParentId">
            <summary>
            Gets or sets the operation parent identifier.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService">
            <summary>
            Defines the base class for a timed background service.
            A timed background service executes repeatedly until it is canceled/stopped, waiting the specified
            <see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod"/> between executions.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase" />
            <remarks>
            The work that should be executed by the background service should be implemented
            in <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.ExecuteWorkAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)"/>.
            The behavior of waiting before executing the next iteration can be customized by
            overriding <see cref="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.TimeSpan,System.Threading.CancellationToken)"/>.
            The background service can be registered using <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.IBackgroundServicesBuilder"/>.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod">
            <summary>
            Gets the amount of time that the background service should wait before
            consecutive executions.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.UseLocking">
            <summary>
            Gets a value indicating whether locking should be applied to prevent multiple instances
            of the background service to run at the same time.
            </summary>
            <remarks>
            When true, the locking mechanism will be provider by <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.InitializeApplicationAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Performs initialization of the application running the background service.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
            <remarks>
            (<see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceBase.ApplicationInitializationAutoComplete"/>).
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.ExecuteWorkAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.Threading.CancellationToken)">
            <summary>
            Executes the background service work, every time <see cref="P:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitPeriod"/> elapses.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="cancellationToken">The cancellation token. This token signals that the background service is being stopped.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.WaitAsync(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
            Wait the specified period of time before triggering the next execution.
            </summary>
            <param name="context">The background service execution context.</param>
            <param name="waitPeriod">The wait period.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.GetLocker(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext)">
            <summary>
            Gets the instance of <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService" /> that should be used.
            </summary>
            <param name="context">The background service execution context.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.ILockingService" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.TimedBackgroundService.StartTelemetry(Primavera.Hydrogen.AspNetCore.Hosting.BackgroundServiceExecutionContext)">
            <summary>
            Starts the telemetry operation.
            </summary>
            <param name="context">The background service execution context.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.TelemetryOperation" /> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem">
            <summary>
            Defines the base class for a work item that can be used with a queue to trigger
            the execution of queued background service.
            </summary>
            <remarks>
            Each queued background service should execute on queue of
            specific work item types, derived from this base class.
            </remarks>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem.TelemetryId">
            <summary>
            The name of the property that stores the telemetry identifier (collected when the work item was enqueued).
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem.TelemetryOperationId">
            <summary>
            The name of the property that stores the telemetry operation identifier (collected when the work item was enqueued).
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem.TelemetryOperationParentId">
            <summary>
            The name of the property that stores the telemetry operation parent identifier (collected when the work item was enqueued).
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem.Properties">
            <summary>
            Gets or sets a dictionary that allows storing additional data
            about the work item.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Hosting.WorkItem" /> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.ClientIpHttpRequestExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.ClientIpHttpRequestExtensions.GetClientIp(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Gets the originating IP address of the client connecting to the Web server,
            considering headers that may specify it.
            </summary>
            <param name="request">The current HTTP request.</param>
            <returns>
            The originating IP address of the client connecting to the Web server.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.IHttpClientFactoryExtensions">
            <summary>
            Provides extension methods for the <see cref="T:System.Net.Http.IHttpClientFactory"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.IHttpClientFactoryExtensions.CreateClientOrUseShared(System.Net.Http.IHttpClientFactory)">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpClient"/> instance using the specified factory
            or use the shared instance provided by <see cref="T:Primavera.Hydrogen.Net.Http.HttpClientBuilder"/> if
            the factory is null.
            </summary>
            <param name="factory">The <see cref="T:System.Net.Http.IHttpClientFactory"/> instance.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpClient"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.IHttpClientFactoryExtensions.CreateHttpClientOrUseShared(System.IServiceProvider)">
            <summary>
            Creates a new <see cref="T:System.Net.Http.HttpClient" /> instance using the registered
            <see cref="T:System.Net.Http.IHttpClientFactory" /> or use the shared instance provided
            by <see cref="T:Primavera.Hydrogen.Net.Http.HttpClientBuilder" /> if <see cref="T:System.Net.Http.IHttpClientFactory" /> is not
            registered.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <returns>
            The <see cref="T:System.Net.Http.HttpClient" /> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream">
            <summary>
            Defines the base class for streams that implement buffering.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.bytesBuffered">
            <summary>
            The number of bytes buffered.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.tailMemory">
            <summary>
            The tail memory.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.tailBytesBuffered">
            <summary>
            The number of tail bytes buffered.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.log">
            <summary>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog"/> instance.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.innerStream">
            <summary>
            The inner stream.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.CanSeek">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.CanRead">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.CanWrite">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Length">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Position">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.WriteTimeout">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.ContentType">
            <summary>
            Gets the content type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.ContentLength">
            <summary>
            Gets the content length.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.#ctor(System.IO.Stream,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream"/> class.
            </summary>
            <param name="innerStream">The inner stream.</param>
            <param name="log">The <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog"/> instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.GetString(System.Text.Encoding)">
            <summary>
            Retrieves the string that contains the stream contents.
            </summary>
            <param name="encoding">The encoding that should be used.</param>
            <returns>
            The string that contains the stream contents.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Advance(System.Int32)">
            <summary>
            Advances the stream the specified number of bytes.
            </summary>
            <param name="bytes">The number of bytes that the stream should advance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.GetMemory(System.Int32)">
            <summary>
            Gets a chunk of memory.
            </summary>
            <param name="sizeHint">An hint for the span size.</param>
            <returns>
            A chunk of memory.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.GetSpan(System.Int32)">
            <summary>
            Gets a memory span.
            </summary>
            <param name="sizeHint">An hint for the span size.</param>
            <returns>
            A memory span.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Reset">
            <summary>
            Resets the stream.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.FlushAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.SetLength(System.Int64)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Write(System.ReadOnlySpan{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.EndRead(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.EndWrite(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.CopyTo(System.IO.Stream,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.DisposeAsync">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Read(System.Span{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferingStream.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment">
            <summary>
            Defines a buffer segment.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.End">
            <summary>
            Gets or sets the offset in the available memory where the range of active bytes ends.
            </summary>
            <remarks>
            At the point when the block is leased the End is guaranteed to be equal to Start.
            The value of Start may be assigned anywhere between 0 and Buffer.Length, and must be equal to or less than End.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.NextSegment">
            <summary>
            Gets or sets a reference to the next block of data when the overall "active" bytes spans multiple blocks.
            </summary>
            <remarks>
            At the point when the block is leased Next is guaranteed to be null. Start, End, and Next are used together in order to create
            a linked-list of dis-contiguous working memory. The "active" memory is grown when bytes are copied in, End is increased, and
            Next is assigned. The "active" memory is shrunk when bytes are consumed, Start is increased, and blocks are returned to the pool.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.AvailableMemory">
            <summary>
            Gets the available memory.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.Length">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.WritableBytes">
            <summary>
            Gets the count of writable bytes.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.MemoryOwner">
            <summary>
            Gets the memory owner.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.SetOwnedMemory(System.Buffers.IMemoryOwner{System.Byte})">
            <summary>
            Sets the owned memory.
            </summary>
            <param name="memoryOwner">
            The memory owner.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.SetOwnedMemory(System.Byte[])">
            <summary>
            Sets the owned memory.
            </summary>
            <param name="arrayPoolBuffer">The buffer.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.ResetMemory">
            <summary>
            Resets the memory.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.SetNext(Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment)">
            <summary>
            Sets the next segment.
            </summary>
            <param name="segment">The next segment.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.GetLength(Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment,System.Int32,Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment,System.Int32)">
            <summary>
            Gets the length of the two specified segments combined.
            </summary>
            <param name="startSegment">The start segment.</param>
            <param name="startIndex">The start index.</param>
            <param name="endSegment">The end segment.</param>
            <param name="endIndex">The end index.</param>
            <returns>The length.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment.GetLength(System.Int64,Primavera.Hydrogen.AspNetCore.Http.Telemetry.BufferSegment,System.Int32)">
            <summary>
            Gets the length of the specified segment part.
            </summary>
            <param name="startPosition">The start position.</param>
            <param name="endSegment">The end segment.</param>
            <param name="endIndex">The end index.</param>
            <returns>The length.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> type
            that activate the HTTP telemetry middleware.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryBuilderExtensions.UseHttpTelemetry(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Adds the HTTP middleware to log HTTP requests and responses.
            </summary>
            <param name="builder">The application builder.</param>
            <returns>
            The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled">
            <summary>
            Defines whether HTTP telemetry is enabled.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Enabled">
            <summary>
            Telemetry is enabled regardless of the response status code.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Disabled">
            <summary>
            Telemetry is disabled regardless of the response status code.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.FailuresOnly">
            <summary>
            Telemetry is enabled only if the response status code indicates a failure.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions">
            <summary>
            Defines a filter for a specific request path that defines the configuration options
            that should be applied.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.Enabled">
            <summary>
            Gets or sets a value indicating whether the HTTP telemetry is enabled for the requests
            that match this rule.
            The default value is <see cref="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Enabled"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.RequestHeaders">
            <summary>
            Gets or sets the names of the response headers that should be tracked.
            </summary>
            <remarks>
            Any header not included in the list and not in the list of headers that are always
            recorded, will be included in the log message but redacted.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.RequestBody">
            <summary>
            Gets or sets a value indicating whether the HTTP telemetry should include the request body.
            The default value is <see cref="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Disabled"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.RequestBodyLimit">
            <summary>
            Gets or sets the maximum size of the request body that should be recorded (in bytes).
            The default value is 32 KB.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.ResponseHeaders">
            <summary>
            Gets or sets the names of the response headers that should be tracked.
            </summary>
            <remarks>
            Any header not included in the list and not in the list of headers that are always
            recorded, will be included in the log message but redacted.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.ResponseBody">
            <summary>
            Gets or sets a value indicating whether the HTTP telemetry should include the response body.
            The default value is <see cref="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Disabled"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.ResponseBodyLimit">
            <summary>
            Gets or sets the maximum size of the response body that should be recorded (in bytes).
            The default value is 32 KB.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.AllRequestHeaders">
            <summary>
            Gets the names of all the request headers that should be tracked.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.AllResponseHeaders">
            <summary>
            Gets the names of all the response headers that should be tracked.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions"/> class.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions">
            <summary>
            Defines the configuration options used by the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions.Enabled">
            <summary>
            Gets or sets a value indicating whether the HTTP telemetry middleware is enabled.
            The default value is <see cref="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Enabled"/>.
            </summary>
            <remarks>
            If the value is <see cref="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.Disabled"/> or <see cref="F:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryEnabled.FailuresOnly" />
            it will override any rule defined.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions.LogLevel">
            <summary>
            Gets or sets the log level that should be used.
            The default value is <see cref="F:Microsoft.Extensions.Logging.LogLevel.Information"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions.Rules">
            <summary>
            Gets or sets the rules that should be applied for specific request paths.
            The dictionary key identifies the path for each rule.
            </summary>
            <remarks>
            The default rule (which applies to any request that does not match any of the other
            rules) should have the path equal to *. This default rule is still optional (if not
            specified, the default rule options will be applied).
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions.MediaTypes">
            <summary>
            Gets or sets the options for configuring encodings for a specific media type.
            </summary>
            <remarks>
            If a request or response do not match one of the supported media types, the respective
            body will not be tracked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions.FindRule(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Retrieves the rule that applies to the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions"/> instance.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that configure the HTTP telemetry middleware.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryServiceCollectionExtensions.AddHttpTelemetry(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the HTTP telemetry services to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            Note that the HTTP telemetry middleware needs to be registered using
            <see cref="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryBuilderExtensions.UseHttpTelemetry(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryServiceCollectionExtensions.AddHttpTelemetry(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions})">
            <summary>
            Adds the HTTP telemetry services to <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            Note that the HTTP telemetry middleware needs to be registered using
            <see cref="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryBuilderExtensions.UseHttpTelemetry(Microsoft.AspNetCore.Builder.IApplicationBuilder)"/>.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeOptions">
            <summary>
            Defines the configuration options used to configure encodings for a specific media type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeOptions.MediaTypeStates">
            <summary>
            Gets the media type states.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeOptions.AddText(System.String)">
            <summary>
            Adds a content type to be used for logging as text.
            </summary>
            <remarks>
            If charset is not specified in the content type, the encoding will default to UTF-8.
            </remarks>
            <param name="contentType">
            The content type that should be added.
            </param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeOptions.AddText(System.String,System.Text.Encoding)">
            <summary>
            Adds a content type to be used for logging as text.
            </summary>
            <remarks>
            If charset is not specified in the content type, the encoding will default to UTF-8.
            </remarks>
            <param name="contentType">
            The content type that should be added.
            </param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState">
            <summary>
            Describes state associated with a media type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState.MediaTypeHeaderValue">
            <summary>
            Gets the media type header value.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState.Encoding">
            <summary>
            Gets the encoding.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState.IsBinary">
            <summary>
            Gets a value indicating whether the media type is binary.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState.#ctor(Microsoft.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState"/> struct.
            </summary>
            <param name="mediaTypeHeaderValue">The media type header value.</param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog">
            <summary>
            Holds information about an HTTP request to be logged.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.#ctor(Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog"/> class.
            </summary>
            <param name="options">The options.</param>
            <param name="rule">The filter rule.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.AddRequest(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            Adds the information about the specified request to the log.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.AddRequestBody(System.String)">
            <summary>
            Adds the specified request body to the log.
            </summary>
            <param name="requestBody">The request body.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.AddResponse(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            Adds the information about the specified response to the log.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.AddResponseBody(System.String)">
            <summary>
            Adds the specified response body to the log.
            </summary>
            <param name="responseBody">The response body.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.Log(System.Boolean)">
            <summary>
            Records all telemetry in the log.
            </summary>
            <param name="requestFailed">
            A value indicating whether the request failed.
            </param>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.__LogRequestResponseStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.__LogRequestBodyStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog.__LogResponseBodyStruct">
            <summary> This API supports the logging infrastructure and is not intended to be used directly from your code. It is subject to change in the future. </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpResponseExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.AspNetCore.Http.HttpResponse"/> type.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpResponseExtensions.Failed(Microsoft.AspNetCore.Http.HttpResponse)">
            <summary>
            Determines whether the response indicates failure.
            </summary>
            <param name="httpResponse">The HTTP response.</param>
            <returns>
            A value indicating whether the response indicates failure.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware">
            <summary>
            Defines a middleware that logs HTTP requests and HTTP responses.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddlewareStats,Microsoft.Extensions.Logging.ILogger{Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware"/> class.
            </summary>
            <param name="next">The middleware next in the pipeline.</param>
            <param name="options">The configuration options.</param>
            <param name="stats">The execution statistics.</param>
            <param name="logger">The options.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the middleware.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The <see cref="T:System.Threading.Tasks.Task"/> that represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddlewareStats">
            <summary>
            Provides information about the execution <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddleware"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddlewareStats.Executed">
            <summary>
            Gets or sets a value indicating whether the middleware was actually executed.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddlewareStats.RequestBuffered">
            <summary>
            Gets or sets a value indicating whether the request was buffered.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryMiddlewareStats.ResponseBuffered">
            <summary>
            Gets or sets a value indicating whether the response was buffered.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeHelpers">
            <summary>
            Provides helper methods to manipulate media types.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeHelpers.TryGetEncodingForMediaType(System.String,System.Collections.Generic.IList{Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeState},System.Text.Encoding@)">
            <summary>
            Tries to determine the encoding for the specified media type.
            </summary>
            <param name="contentType">The content type.</param>
            <param name="mediaTypeList">The list of media types.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            A value indicating whether the encoding could be determined.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeHelpers.UnrecognizedMediaType(System.String,System.Nullable{System.Int64})">
            <summary>
            Gets the string that should be logged when an unrecognized media type is found.
            </summary>
            <param name="contentType">The content type.</param>
            <param name="contentLength">The content length.</param>
            <returns>The string that should be logged when an unrecognized media type is found.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.MediaTypeHelpers.DecoderFailure(System.String,System.Nullable{System.Int64})">
            <summary>
            Gets the string that should be logged when the decoder fails.
            </summary>
            <param name="contentType">The content type.</param>
            <param name="contentLength">The content length.</param>
            <returns>The string that should be logged when the decoder fails.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream">
            <summary>
            Defines a stream that buffers the request body.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.HasLogged">
            <summary>
            Gets a value indicating whether the request body has been logged.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.ContentLength">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.#ctor(Microsoft.AspNetCore.Http.HttpRequest,System.Text.Encoding,System.Int32,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream"/> class.
            </summary>
            <param name="request">The HTTP request.</param>
            <param name="encoding">The encoding.</param>
            <param name="limit">The limit on the contents logged.</param>
            <param name="log">The <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog"/> instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.ReadAsync(System.Memory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.Read(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.LogBody">
            <summary>
            Logs the request body.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.RequestBufferingStream.EndRead(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream">
            <summary>
            Defines a stream that buffers the response body.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.FirstWrite">
            <summary>
            Gets a value indicating whether the first write has occurred.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.HasLogged">
            <summary>
            Gets a value indicating whether the request body has been logged.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.Stream">
            <summary>
            Gets the stream.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.Writer">
            <summary>
            Gets the writer.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.Encoding">
            <summary>
            Gets the encoding.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.ContentType">
            <inheritdoc />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.ContentLength">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.#ctor(Microsoft.AspNetCore.Http.Features.IHttpResponseBodyFeature,Microsoft.AspNetCore.Http.HttpResponse,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryOptions,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpTelemetryFilterOptions,Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream"/> class.
            </summary>
            <param name="innerBodyFeature">The inner body feature.</param>
            <param name="response">The response.</param>
            <param name="options">The options.</param>
            <param name="rule">The rule.</param>
            <param name="log">The <see cref="T:Primavera.Hydrogen.AspNetCore.Http.Telemetry.HttpRequestLog"/> instance.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.Write(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.EndWrite(System.IAsyncResult)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.Write(System.ReadOnlySpan{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.WriteAsync(System.ReadOnlyMemory{System.Byte},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.DisableBuffering">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.SendFileAsync(System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.CompleteAsync">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.Flush">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.FlushAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Http.Telemetry.ResponseBufferingStream.LogBody">
            <summary>
            Logs the response body.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Localization.CurrentUserRequestCultureProvider">
            <summary>
            Defines a provider for determining the culture information of a <see cref="T:Microsoft.AspNetCore.Http.HttpRequest"/>
            from the current user culture (using the user claims).
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Localization.CurrentUserRequestCultureProvider.#ctor(System.IServiceProvider,System.Collections.Generic.IEnumerable{System.Globalization.CultureInfo})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Localization.CurrentUserRequestCultureProvider" /> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="supportedCultures">The supported cultures.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Localization.CurrentUserRequestCultureProvider.DetermineProviderCultureResult(Microsoft.AspNetCore.Http.HttpContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase">
            <summary>
            Defines the base class for API controllers which should be used for any controller that is part of a REST API to ensure
            standard behavior (see remarks).
            </summary>
            <remarks>
            This base class ensures the following behaviors:
            (1) Inherits from <see cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>.
            (2) Adds the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/> attribute to the controller, which in turns ensures things like attribute
            routing.
            (3) Provides an instance of <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> to validate the input of actions.
            </remarks>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase.Validate">
            <summary>
            Initializes a new validator.
            </summary>
            <returns>The new <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.IValidationAttributeAdapterProvider"/> that allows using the custom
            attributes for client-side validation and jQuery Unobtrusive validation.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.IValidationAttributeAdapterProvider" />
            <remarks>
            For more information see:
            <see href="https://docs.microsoft.com/en-us/aspnet/core/mvc/models/validation?view=aspnetcore-5.0"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider.GetAttributeAdapter(System.ComponentModel.DataAnnotations.ValidationAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.EmailAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.EmailAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.EmailAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.EmailAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.EmailAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.EmailAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanOrEqualToAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanOrEqualToAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.GreaterThanOrEqualToAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanOrEqualToAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanOrEqualToAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.GreaterThanOrEqualToAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet">
            <summary>
            Allows injecting the JavaScript snippet required to setup client-side unobtrusive model
            validation using the adapters configured by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript">
            <summary>
            Gets the full JavaScript snippet required to setup client-side unobtrusive model validation.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanOrEqualToAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanOrEqualToAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.LessThanOrEqualToAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanOrEqualToAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanOrEqualToAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.LessThanOrEqualToAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.PhoneAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.PhoneAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.PhoneAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.PhoneAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.PhoneAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.PhoneAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RegularExpressionAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RegularExpressionAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.RegularExpressionAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RegularExpressionAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RegularExpressionAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RegularExpressionAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RequiredAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RequiredAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.RequiredAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RequiredAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RequiredAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.RequiredAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMaxLengthAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMaxLengthAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMaxLengthAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMaxLengthAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMaxLengthAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMaxLengthAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMinLengthAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMinLengthAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.TextMinLengthAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMinLengthAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMinLengthAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.TextMinLengthAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.UriAttributeAdapter">
            <summary>
            Defines a <see cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.ValidationAttributeAdapter`1"/> for the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute"/> custom attribute.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.DataAnnotations.AttributeAdapterBase`1" />
            <remarks>
            This adds support for client-side validation with the <see cref="T:Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute"/> and jQuery Unobtrusive validation
            (applied by <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.CustomValidationAttributeAdapterProvider"/>.
            The JavaScript snippet required to apply client-side validation can be injected using
            <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.JavaScriptSnippet.FullScript"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.UriAttributeAdapter.#ctor(Primavera.Hydrogen.ComponentModel.DataAnnotations.UriAttribute,Microsoft.Extensions.Localization.IStringLocalizer)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.UriAttributeAdapter"/> class.
            </summary>
            <param name="attribute">The validation attribute being wrapped.</param>
            <param name="stringLocalizer">The string localizer to be used in error generation.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.UriAttributeAdapter.AddValidation(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ClientModelValidationContext)">
            <inheritdoc />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.DataAnnotations.UriAttributeAdapter.GetErrorMessage(Microsoft.AspNetCore.Mvc.ModelBinding.Validation.ModelValidationContextBase)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions">
            <summary>
            Defines the configuration options used to configure the API controllers by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>
            extension methods.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning">
            <summary>
            Gets or sets a value indicating whether the API should use versioning.
            The default value is true.
            </summary>
            <remarks>
            API versioning is enabled by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DefaultApiVersion">
            <summary>
            Gets or sets the default API version, meaningful only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning"/> is true.
            The default value is 1.0.
            </summary>
            <remarks>
            API versioning is enabled by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DisableModelInvalidResponse">
            <summary>
            Gets or sets a value indicating whether the automatic response from the MVC infrastructure when
            the model state is invalid (on controller actions inputs) is disabled.
            The default value is true.
            </summary>
            <remarks>
            This behavior is configured by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DisableImplicitRequiredAttributeForNonNullableReferenceTypes">
            <summary>
            Gets or sets a value indicating whether the automatic behavior of the MVC infrastructure to apply
            the required attribute for non-nullable reference types is disabled.
            The default value is true.
            </summary>
            <remarks>
            This behavior is configured by the
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>,
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions})"/>,
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/> and
            <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions})"/>
            extension methods.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureMvcOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.MvcOptions"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureJsonOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/>.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureApiBehaviorOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.DisableModelInvalidResponse"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureApiVersioningOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning"/> is true.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.ConfigureApiExplorerOptions">
            <summary>
            Gets or sets a delegate to configure <see cref="T:Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions"/>.
            This delegate will be used only when <see cref="P:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.UseVersioning"/> is true.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions.Validate">
            <summary>
            Validates this instance.
            </summary>
            <exception cref="T:System.InvalidOperationException">
            The options are invalid.
            </exception>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type
            that allow configuring services for supporting API controllers.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services for API controllers to the specified service collection.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            This method will not register services used by views or pages.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>.
            To add services for controllers with views call <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions})">
            <summary>
            Adds services for API controllers to the specified service collection using the specified action
            to configure options.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            This method will not register services used by views or pages.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions})"/>.
            To add services for controllers with views call <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds services for API controllers and views to the specified service collection.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllersServiceCollectionExtensions.AddApiControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerOptions})">
            <summary>
            Adds services for API controllers and views to the specified service collection.
            This method will configure MVC to correctly use the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>
            and <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/> features.
            </summary>
            <param name="services">The service collection.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The service configures the MVC services for the services used by API controllers.
            It combines the effects of:
            - <see cref="M:Microsoft.Extensions.DependencyInjection.MvcServiceCollectionExtensions.AddControllersWithViews(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.AspNetCore.Mvc.MvcOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})"/>.
            - <see cref="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions})"/>.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.OData.ApiODataControllerBase">
            <summary>
            Defines the base class for API controllers which should be used for any controller with OData endpoints
            that is part of a REST API to ensure standard behavior (see remarks).
            </summary>
            <remarks>
            This base class ensures the following behaviors:
            (1) Inherits from <see cref="T:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController"/>.
            (2) Adds the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/> attribute to the controller, which in turns ensures things like attribute
            routing.
            (3) Provides an instance of <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> to validate the input of actions.
            </remarks>
            <seealso cref="T:Microsoft.AspNetCore.OData.Routing.Controllers.ODataController"/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.OData.ApiODataControllerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.OData.ApiODataControllerBase" /> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.OData.ApiODataControllerBase.Validate">
            <summary>
            Initializes a new validator.
            </summary>
            <returns>The new <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.OData.EnableODataQueryAttribute">
            <summary>
            Defines an attribute that can be applied to an action to enable querying using the OData query
            syntax.
            </summary>
            <remarks>
            This implementation extends <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/> to support additional features
            like required query options.
            </remarks>
            <seealso cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute" />
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.OData.EnableODataQueryAttribute.RequiredQueryOptions">
            <summary>
            Gets or sets the required query options.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.OData.EnableODataQueryAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.OData.EnableODataQueryAttribute"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.OData.EnableODataQueryAttribute.ValidateQuery(Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.OData.Query.ODataQueryOptions)">
            <inheritdoc/>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.OData.EnableODataQueryAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions">
            <summary>
            Defines the OData query options required for querying.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.None">
            <summary>
            A value that corresponds to requiring no query options.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.Filter">
            <summary>
            A value that corresponds to requiring the $filter query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.Select">
            <summary>
            A value that corresponds to requiring the $select query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.OrderBy">
            <summary>
            A value that corresponds to requiring the $orderby query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.Top">
            <summary>
            A value that corresponds to requiring the $top query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.Skip">
            <summary>
            A value that corresponds to requiring the $skip query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.Count">
            <summary>
            A value that corresponds to requiring the $count query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.SkipToken">
            <summary>
            A value that corresponds to requiring the $skiptoken query option.
            </summary>
        </member>
        <member name="F:Primavera.Hydrogen.AspNetCore.Mvc.OData.RequiredQueryOptions.All">
            <summary>
            A value that corresponds to requiring all query options.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/>.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder)">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/> with custom serialization behavior required by REST API controllers.
            </summary>
            <param name="builder">The builder.</param>
            <returns>>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.</returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Rest.RestApiMvcBuilderExtensions.AddApiJsonOptions(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.JsonOptions})">
            <summary>
            Configures the <see cref="T:Microsoft.AspNetCore.Mvc.JsonOptions"/> with custom serialization behavior required by REST API controllers.
            </summary>
            <param name="builder">The builder.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>>The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.</returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.DefaultRouteAnalyzerService">
            <summary>
            Defines the default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzerService"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzerService" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.DefaultRouteAnalyzerService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Primavera.Hydrogen.AspNetCore.Mvc.Routing.DefaultRouteAnalyzerService})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.DefaultRouteAnalyzerService"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.DefaultRouteAnalyzerService.Analyze">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzerServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type that
            allows registering the route analyzer service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.RouteAnalyzerServiceCollectionExtensions.AddRouteAnalyzer(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the route analyzer service to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzerService"/> is registered as transient.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzerService">
            <summary>
            Defines the interface of the route analyzer service.
            The route analyzer service allows retrieving the all the routes configured
            in MVC.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Routing.IRouteAnalyzerService.Analyze">
            <summary>
            Retrieves information about all the routes configured in MVC.
            </summary>
            <returns>
            A list of the <see cref="T:Primavera.Hydrogen.Rest.Routing.RouteInfo"/> instances retrieved from the action
            descriptors configured in MVC for all routes.
            </returns>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator">
            <summary>
            Defines a validator that can be used in API controllers (<see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>) to validate
            the input arguments of actions.
            </summary>
            <remarks>This validator also considers the validation errors present in the model state.</remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Check(System.String,System.Boolean,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is true.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Check(System.String,System.Func{System.Boolean},System.String,System.Object[])">
            <summary>
            Validates that the result of <paramref name="checker" /> is true.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="checker">The function that performs the validation.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Errors">
            <summary>
            Gets the validation errors.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.#ctor(Microsoft.AspNetCore.Mvc.ModelBinding.ModelStateDictionary,Microsoft.Extensions.Logging.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> class.
            </summary>
            <param name="modelState">The controller model state.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Result(System.String,System.String,Primavera.Hydrogen.Rest.RestProblemDetails@)">
            <summary>
            Returns the result of the validation.
            </summary>
            <param name="errorCode">The code of the main error that should be returned if there are validation errors.</param>
            <param name="errorDescription">The description of the main error that should be returned if there are validation errors.</param>
            <param name="serviceError">The resulting <see cref="T:Primavera.Hydrogen.Rest.RestProblemDetails"/> that includes all the validation errors.</param>
            <returns>
            True if there are no errors (<paramref name="serviceError"/> is null).
            False if there is at least one error (<paramref name="serviceError"/> describes the errors found).
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Decimal,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue" />.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Double,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Object,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Object,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Object,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThan(System.String,System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Decimal,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Double,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Object,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Object,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.GreaterThanOrEqualTo(System.String,System.Object,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is greater than or equal to <paramref name="minValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="minValue">The minimum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsAbsoluteUri(System.String,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid absolute URI.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsAbsoluteUri(System.String,System.Uri,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid absolute URI.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsAbsoluteUri(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid absolute URI.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsEmail(System.String,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid email address.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsEmail(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid email address.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsInternationalPhoneNumber(System.String,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid phone number specified in international (E.164) format.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsInternationalPhoneNumber(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid phone number specified in international (E.164) format.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsPhoneNumber(System.String,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid phone number.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.IsPhoneNumber(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is a valid phone number.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Decimal,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Double,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Object,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Object,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Object,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThan(System.String,System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Decimal,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Double,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Int64,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Int32,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Object,System.Decimal,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Object,System.Double,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Object,System.Int64,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.LessThanOrEqualTo(System.String,System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is less than or equal to <paramref name="maxValue"/>.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="maxValue">The maximum value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.MaxLength(System.String,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> as at most <paramref name="length"/> characters.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="length">The maximum length.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.MaxLength(System.String,System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> as at most <paramref name="length"/> characters.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="length">The maximum length.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.MinLength(System.String,System.String,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> as at least <paramref name="length"/> characters.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="length">The minimum length.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.MinLength(System.String,System.Object,System.Int32,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> as at least <paramref name="length"/> characters.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="length">The minimum length.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.NotEmpty(System.String,System.Guid,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is not empty.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.NotEmpty(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is not empty.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            <paramref name="value"/> is expected to be an enumerable.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.RegularExpression(System.String,System.String,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> matches the specified regular expression.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="expression">The regular expression that should be matched.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.RegularExpression(System.String,System.Object,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> matches the specified regular expression.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="expression">The regular expression that should be matched.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.RegularExpression(System.String,System.String,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> matches the specified regular expression.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="expression">The regular expression that should be matched.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.RegularExpression(System.String,System.Object,System.Text.RegularExpressions.Regex,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> matches the specified regular expression.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="expression">The regular expression that should be matched.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.String,System.Nullable{System.Guid},System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is specified.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.String,System.String,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is specified.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.String,System.Nullable{System.Text.Json.JsonElement},System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value"/> is specified.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> instance.
            </returns>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator.Required(System.String,System.Object,System.String,System.Object[])">
            <summary>
            Validates that <paramref name="value" /> is specified.
            </summary>
            <param name="argName">The name of the argument being validated.</param>
            <param name="value">The value.</param>
            <param name="errorDescription">The description of the error that should be added if the validation fails.</param>
            <param name="errorDescriptionArgs">The error description formatting arguments.</param>
            <returns>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator" /> instance.
            </returns>
            <remarks>
            If <paramref name="value"/> is an enumerable, its values will be checked.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult">
            <summary>
            Describes the model state validation result returned by an API controller (<see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/> and/or
            <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>) when the input model has validation errors.
            </summary>
            <remarks>
            When a controller (<see cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>) is annotated with the <see cref="T:Microsoft.AspNetCore.Mvc.ApiControllerAttribute"/>
            (which is the case of all controllers that derive from <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.ApiControllerBase"/>) the MVC
            infrastructure will automatically validate input models. When <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter"/> is false,
            if any validation error is found, a <see cref="F:System.Net.HttpStatusCode.BadRequest"/> response is returned, including a JSON in the content
            that describes the errors.
            This class can be used to deserialize that response content as it is equivalent to <see cref="T:Microsoft.AspNetCore.Mvc.ValidationProblemDetails"/>.
            </remarks>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Type">
            <summary>
            Gets or sets the response type.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Status">
            <summary>
            Gets or sets the status code.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.TraceId">
            <summary>
            Gets or sets the trace id.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ModelStateValidationResult.Errors">
            <summary>
            Gets or sets the errors.
            This is dictionary where the key is the field that caused the error and
            the value is a list containing the error messages.
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> type to configure
            validation behaviors.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ValidationIMvcBuilderExtensions.ConfigureApiBehaviorOptionsWithoutModelInvalidResponse(Microsoft.Extensions.DependencyInjection.IMvcBuilder,System.Action{Microsoft.AspNetCore.Mvc.ApiBehaviorOptions})">
            <summary>
            Configures <see cref="T:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions"/> with <see cref="P:Microsoft.AspNetCore.Mvc.ApiBehaviorOptions.SuppressModelStateInvalidFilter"/> set
            as true by default to prevent the API controller from returning <see cref="T:Microsoft.AspNetCore.Mvc.BadRequestObjectResult"/> when the model
            state is invalid.
            </summary>
            <param name="builder">The MVC builder.</param>
            <param name="configureDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IMvcBuilder"/> instance.
            </returns>
            <remarks>
            This behavior is required so that <see cref="T:Primavera.Hydrogen.AspNetCore.Mvc.Validation.ApiControllerValidator"/> can be used to validate the actions input
            arguments. Otherwise, a response will be returned before the action code executes.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type to
            configure API versioning services.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion)">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions})">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <param name="configureApiVersioningDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions})">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <param name="configureAplExplorerDelegate">The configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.ApiVersioningServiceCollectionExtensions.AddApiVersioning(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Mvc.ApiVersion,System.Action{Microsoft.AspNetCore.Mvc.Versioning.ApiVersioningOptions},System.Action{Microsoft.AspNetCore.Mvc.ApiExplorer.ApiExplorerOptions})">
            <summary>
            Adds the API versioning service to the specified <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>.
            </summary>
            <param name="services">The service collection.</param>
            <param name="defaultVersion">The API default version. This is the version that should be applied to the actions that do not specify an explicit API version.</param>
            <param name="configureApiVersioningDelegate">The API versioning configuration delegate.</param>
            <param name="configureAplExplorerDelegate">The API explorer configuration delegate.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            For more information about the API versioning service <see href="https://github.com/Microsoft/aspnet-api-versioning/"/>.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.CustomErrorResponseProvider">
            <summary>
            Provides a custom <see cref="T:Microsoft.AspNetCore.Mvc.Versioning.IErrorResponseProvider"/>, used by the API versioning
            middleware, to return <see cref="T:Primavera.Hydrogen.Rest.RestProblemDetails"/> instances on errors.
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Versioning.DefaultErrorResponseProvider" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Mvc.Versioning.CustomErrorResponseProvider.CreateErrorContent(Microsoft.AspNetCore.Mvc.Versioning.ErrorResponseContext)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.OpenApi.Processors.ODataOperationProcessor">
            <summary>
            Adds the OData query parameters to an operation by detecting the <see cref="T:Microsoft.AspNetCore.OData.Query.EnableQueryAttribute"/>.
            </summary>
            <seealso cref="T:NSwag.Generation.Processors.IOperationProcessor" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.OpenApi.Processors.ODataOperationProcessor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.OpenApi.Processors.ODataOperationProcessor"/> class.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.OpenApi.Processors.ODataOperationProcessor.Process(NSwag.Generation.Processors.Contexts.OperationProcessorContext)">
            <inheritdoc/>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator">
            <summary>
            Overrides the default behavior of <see cref="T:NSwag.Generation.OpenApiSchemaGenerator"/> by removing
            the title property from each schema.
            </summary>
            <seealso cref="T:NSwag.Generation.OpenApiSchemaGenerator" />
            <remarks>
            The default schema generator uses the <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> in properties
            to set the schema title. When this attribute is defined using resource types, this
            results in the title being set to the resource name, not its value. It is better to
            remove the title entirely.
            </remarks>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator.#ctor(NSwag.Generation.OpenApiDocumentGeneratorSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator"/> class.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.OpenApi.Schema.NoTitleFromDisplayNameOpenApiSchemaGenerator.ApplyDataAnnotations(NJsonSchema.JsonSchema,NJsonSchema.Generation.JsonTypeDescription)">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_BackgroundService_Disabled">
            <summary>
              Looks up a localized string similar to Background service is disabled..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_BackgroundService_InitializationNotCompleted">
            <summary>
              Looks up a localized string similar to Background service has not completed initialization..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Error_InputInvalid">
            <summary>
              Looks up a localized string similar to The input is invalid..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Error_OData_InvalidQueryOptions">
            <summary>
              Looks up a localized string similar to The specified OData query options are invalid. {0}.
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_BackgroundServiceQueueNotSet">
            <summary>
              Looks up a localized string similar to The queue instance is not set..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_BackgroundServiceWorkerNotSet">
            <summary>
              Looks up a localized string similar to The background worker instance is not set..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_BackgroundServiceWorkItemNotSet">
            <summary>
              Looks up a localized string similar to The work item instance is not set..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_ConfigurationAnalyzer_ConfigurationNotAvailable">
            <summary>
              Looks up a localized string similar to Unable to analyze configuration. {0} is not registered..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_EndpointAnalyzer_EndpointDataSourceNotAvailable">
            <summary>
              Looks up a localized string similar to Unable to analyze endpoints. {0} is not registered..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_HttpTelemetry_DecoderFailure">
            <summary>
              Looks up a localized string similar to Failed to decode after 10 tries..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_InvalidApiControllerOptions_DefaultApiVersion_Required">
            <summary>
              Looks up a localized string similar to Since API versioning is enabled, the default API version is required..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_InvalidBackgroundServiceTypeName">
            <summary>
              Looks up a localized string similar to Background service type &apos;{0}&apos; full name is null or empty..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_OData_QueryOptionRequired">
            <summary>
              Looks up a localized string similar to Query option &apos;{0}&apos; is required..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_Exception_RouteAnalyzer_ActionDescriptorCollectionProviderNotAvailable">
            <summary>
              Looks up a localized string similar to Unable to analyze routes. {0} is not registered..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_Count_Description">
            <summary>
              Looks up a localized string similar to Return the total number of results..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_Filter_Description">
            <summary>
              Looks up a localized string similar to OData filter syntax to apply to the results..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_OrderBy_Description">
            <summary>
              Looks up a localized string similar to OData sort syntax to apply to the results..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_Select_Description">
            <summary>
              Looks up a localized string similar to OData select syntax to apply to the results..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_Skip_Description">
            <summary>
              Looks up a localized string similar to The number of results that should be skipped..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_SkipToken_Description">
            <summary>
              Looks up a localized string similar to OData skip token syntax to apply to the results..
            </summary>
        </member>
        <member name="P:Primavera.Hydrogen.AspNetCore.Properties.Resources.RES_OData_Top_Description">
            <summary>
              Looks up a localized string similar to The number of results that should be returned..
            </summary>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Routing.DefaultEndpointAnalyzerService">
            <summary>
            Defines the default implementation of <see cref="T:Primavera.Hydrogen.AspNetCore.Routing.IEndpointAnalyzerService"/>.
            </summary>
            <seealso cref="T:Primavera.Hydrogen.AspNetCore.Routing.IEndpointAnalyzerService" />
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Routing.DefaultEndpointAnalyzerService.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Primavera.Hydrogen.AspNetCore.Routing.DefaultEndpointAnalyzerService})">
            <summary>
            Initializes a new instance of the <see cref="T:Primavera.Hydrogen.AspNetCore.Routing.DefaultEndpointAnalyzerService"/> class.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="logger">The logger.</param>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Routing.DefaultEndpointAnalyzerService.Analyze">
            <inheritdoc />
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Routing.EndpointAnalyzerServiceCollectionExtensions">
            <summary>
            Provides extension methods for the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> type that
            allows registering the endpoint analyzer service.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Routing.EndpointAnalyzerServiceCollectionExtensions.AddEndpointAnalyzer(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the endpoint analyzer service to the service collection.
            </summary>
            <param name="services">The service collection.</param>
            <returns>
            The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> instance.
            </returns>
            <remarks>
            The <see cref="T:Primavera.Hydrogen.AspNetCore.Routing.IEndpointAnalyzerService"/> is registered as transient.
            </remarks>
        </member>
        <member name="T:Primavera.Hydrogen.AspNetCore.Routing.IEndpointAnalyzerService">
            <summary>
            Defines the interface of the endpoint analyzer service.
            The endpoint analyzer service allows retrieving the all the endpoints configured
            in the application.
            </summary>
        </member>
        <member name="M:Primavera.Hydrogen.AspNetCore.Routing.IEndpointAnalyzerService.Analyze">
            <summary>
            Retrieves information about all the endpoints configured in the application.
            </summary>
            <returns>
            A list of the <see cref="T:Primavera.Hydrogen.Rest.Routing.EndpointInfo"/> instances retrieved.
            </returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.LockNameRegEx_0">
            <summary>Custom <see cref="T:System.Text.RegularExpressions.Regex"/>-derived type for the LockNameRegEx method.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.LockNameRegEx_0.Instance">
            <summary>Cached, thread-safe singleton instance.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.LockNameRegEx_0.#ctor">
            <summary>Initializes the instance.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.LockNameRegEx_0.RunnerFactory">
            <summary>Provides a factory for creating <see cref="T:System.Text.RegularExpressions.RegexRunner"/> instances to be used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.LockNameRegEx_0.RunnerFactory.CreateInstance">
            <summary>Creates an instance of a <see cref="T:System.Text.RegularExpressions.RegexRunner"/> used by methods on <see cref="T:System.Text.RegularExpressions.Regex"/>.</summary>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.LockNameRegEx_0.RunnerFactory.Runner">
            <summary>Provides the runner that contains the custom logic implementing the specified regular expression.</summary>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.LockNameRegEx_0.RunnerFactory.Runner.Scan(System.ReadOnlySpan{System.Char})">
            <summary>Scan the <paramref name="inputSpan"/> starting from base.runtextstart for the next match.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
        </member>
        <member name="M:System.Text.RegularExpressions.Generated.LockNameRegEx_0.RunnerFactory.Runner.TryFindNextPossibleStartingPosition(System.ReadOnlySpan{System.Char})">
            <summary>Search <paramref name="inputSpan"/> starting from base.runtextpos for the next location a match could possibly start.</summary>
            <param name="inputSpan">The text being scanned by the regular expression.</param>
            <returns>true if a possible match was found; false if no more matches are possible.</returns>
        </member>
        <member name="T:System.Text.RegularExpressions.Generated.Utilities">
            <summary>Helper methods used by generated <see cref="T:System.Text.RegularExpressions.Regex"/>-derived implementations.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout">
            <summary>Default timeout value set in <see cref="T:System.AppContext"/>, or <see cref="F:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout"/> if none was set.</summary>
        </member>
        <member name="F:System.Text.RegularExpressions.Generated.Utilities.s_hasTimeout">
            <summary>Whether <see cref="F:System.Text.RegularExpressions.Generated.Utilities.s_defaultTimeout"/> is non-infinite.</summary>
        </member>
    </members>
</doc>
